openapi: 3.0.1
info:
  title: Gambio GX3 API
  description: "This is the Gambio GX Restful API documentation for the GX shop software.\
    \ You can find out more about Gambio at [http://www.gambio.de](http://www.gambio.de)."
  version: 3.9.0
servers:
- url: https://gambio-shop.de/shop1/api.php/v2
security:
- basicAuth: []
tags:
- name: address_formats
  description: Address Formats
- name: addresses
  description: Addresses
- name: cache
  description: Cache
- name: attachments
  description: Attachments
- name: categories
  description: Categories
- name: category_icons
  description: Category Icons
- name: category_images
  description: Category Images
- name: countries
  description: Countries
- name: cronjobs
  description: Cronjobs
- name: customer_groups
  description: Customer Groups
- name: customers
  description: Customers
- name: emails
  description: Emails
- name: manufacturers
  description: Manufacturers
- name: order_statuses
  description: Order Statuses
- name: orders_history
  description: Orders History
- name: parcel_services
  description: Parcel Services
- name: orders
  description: Orders
- name: payment_details
  description: Payment Details
- name: product_images
  description: Product Images
- name: product_prices
  description: Product Prices
- name: quantity_units
  description: Quantity Units
- name: products
  description: Products
- name: shop_information
  description: Shop Information
- name: reviews
  description: Reviews
- name: special_offers
  description: Special Offers
- name: tax
  description: Tax
- name: tracking_code
  description: Tracking Code
- name: tracking_codes
  description: Tracking Codes
- name: vpe
  description: Vpe
- name: withdrawal
  description: Withdrawal
- name: zones
  description: Zones
paths:
  /address_formats:
    get:
      tags:
      - address_formats
      summary: Get Address Formats
      description: Get all address formats or a single address format.
      operationId: getAddressFormats
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of address formats"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXAddressFormat'
                x-content-type: application/json
        "400":
          description: (Invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Address Format Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /addresses/{address_id}:
    get:
      tags:
      - addresses
      summary: Get Address (Single)
      description: Get a single address record through a GET requets. This method
        supports all the GET parameters that are mentioned in the "Introduction" section
        of this documentation.
      operationId: getAddress
      parameters:
      - name: address_id
        in: path
        description: The ID of the address to fetch
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Upon success, returns the address that was fetched"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXAddress'
        "404":
          description: (Invalid address ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - addresses
      summary: Update Address
      description: "Update an existing address record by providing new data. You do\
        \ not have to provide the full presentation of the address in the JSON string\
        \ of the request, rather just the fields to be updated. The address ID will\
        \ be taken from the URI of the request so it is not required that it is included\
        \ withing the request JSON."
      operationId: updateAddress
      parameters:
      - name: address_id
        in: path
        description: The ID of the address to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Upon success, returns the updated address"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXAddress'
    delete:
      tags:
      - addresses
      summary: Delete Address
      description: "Remove an address record from the system. This method will always\
        \ return success even if the address record does not exist (due to internal\
        \ architecture decisions, which strive to avoid unnecessary failures)."
      operationId: deleteAddress
      parameters:
      - name: address_id
        in: path
        description: The ID of the address to be removed
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted addressID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressDeleteResponse'
        "400":
          description: (Address record ID not provided)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /addresses:
    get:
      tags:
      - addresses
      summary: Get Addresses (Multiple)
      description: Get multiple address records through a GET request. This method
        supports all the GET parameters that are mentioned in the "Introduction" section
        of this documentation.
      operationId: getAddresses
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns the address that was fetched"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXAddress'
                x-content-type: application/json
        "404":
          description: (Invalid address ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    post:
      tags:
      - addresses
      summary: Create Address
      description: Create an address record for a customer in the system.
      operationId: createAddress
      requestBody:
        description: The address to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXAddress'
        required: true
      responses:
        "200":
          description: "Upon success, returns the newly created address"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCustomer'
        "400":
          description: (Address data was not provided)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: address
  /cache:
    delete:
      tags:
      - cache
      summary: Clear Shop Cache
      description: Clear the shop cache with a DELETE request.
      operationId: deleteCache
      responses:
        "200":
          description: "Upon success, returns the default success response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithFilename'
  /attachments:
    post:
      tags:
      - attachments
      summary: Upload Attachment
      description: "If an email contains an attachment this must be uploaded before\
        \ the email is sent. This method accepts the upload of one file at a time.\
        \ It will return its temporary path which can be used as the attachment path\
        \ in the email JSON data. The name of the file form field is not taken into\
        \ concern (can be whatever). The important rule is that only one file will\
        \ be uploaded at a time and that you are sending the Content-Type: multipart/form-data\
        \ header instead of application/json."
      operationId: uploadAttachments
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/attachments_body'
        required: true
      responses:
        "201":
          description: "Upon success, returns the default success response with the\
            \ attachment path"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/attachmentSuccessExample'
        "400":
          description: (No attachment file was provided)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /categories/{category_ids}:
    delete:
      tags:
      - categories
      summary: Delete Categories
      description: "Removes multiple category records from the database, provided\
        \ a comma-seperated list of IDs to delete."
      operationId: deleteCategories
      parameters:
      - name: category_ids
        in: path
        description: A comma-seperated list of category IDs to delete
        required: true
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted category IDs"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDeleteSuccessResponse'
        "400":
          description: (category ID missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /categories:
    get:
      tags:
      - categories
      summary: Get Categories (Multiple)
      description: Get multiple category records through a GET request. This method
        supports all the GET parameters that are mentioned in the "Introduction" section
        of this documentation. To see an example usage take a look at `docs/REST/samples/category-service/fetch_category.php`
      operationId: getCategories
      parameters:
      - name: recursive
        in: query
        description: "*Optional parameter*. If provided, recursively includes the\
          \ ressources child-resources."
        required: false
        allowEmptyValue: true
        style: form
        explode: true
        schema:
          type: boolean
      - name: changed
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **changed/deleted** at the given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: modified
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **modified** at a given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: deleted
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **deleted** at the given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of categories"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCategoryListing'
        "404":
          description: (Category does not exist)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - categories
      summary: Update Category (Multiple)
      description: "Use this method to update multiple existing category records.\
        \ It takes an array of GXCategory Objects, updating them based on their <b>id</b>\
        \ property."
      operationId: updateCategories
      requestBody:
        description: An array of categories to update.
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GXCategoryArray'
        required: true
      responses:
        "200":
          description: "Upon success, returns an array of the updated categories"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categoryArrayPutResponse'
        "400":
          description: (Missing data or ID invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXCategoryArray
    post:
      tags:
      - categories
      summary: Create Categories
      description: "Creates new categories in the system by taking an array of categories.\
        \ It is also possible to provide a single <a href=\"/gambio-gx3-api/resources/gxcategory\"\
        >GXCategory</a> ressource, to create a single entry."
      operationId: createCategories
      requestBody:
        description: An array of categories
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GXCategoryArray'
        required: true
      responses:
        "201":
          description: "Upon success, returns the categories that was created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categoryArrayPostResponse'
        "400":
          description: (Category data was not provided)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXCategoryArray
  /categories/{category_id}:
    get:
      tags:
      - categories
      summary: Get Categories (Single)
      description: Get a single category record through a GET request. This method
        supports all the GET parameters that are mentioned in the "Introduction" section
        of this documentation. To see an example usage take a look at `docs/REST/samples/category-service/fetch_category.php`
      operationId: getCategory
      parameters:
      - name: category_id
        in: path
        description: The category ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns a category"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCategory'
        "404":
          description: (Category does not exist)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - categories
      summary: Update Category
      description: Use this method to update an existing category record. Take a look
        in the POST method for more detailed explanation on every resource property.
        To see an example usage take a look at `docs/REST/samples/category-service/update_category.php`
      operationId: updateCategory
      parameters:
      - name: category_id
        in: path
        description: The category ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: An array of categories to update.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXCategory'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated category"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCategory'
        "400":
          description: (Empty request body / Category record ID was not provided or
            is invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXCategory
  /categories/{category_id}/products:
    get:
      tags:
      - categories
      summary: Get Category Products
      description: Get multiple product records of an specified category through a
        GET request. Using the `recursive` query parameter allows you to receive the
        products from the sub categories.
      operationId: getCategoriyProducts
      parameters:
      - name: recursive
        in: query
        description: "*Optional parameter*. If provided, recursively includes the\
          \ ressources child-resources."
        required: false
        allowEmptyValue: true
        style: form
        explode: true
        schema:
          type: boolean
      - name: category_id
        in: path
        description: The category ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns an array of products"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXProduct'
                x-content-type: application/json
        "404":
          description: (Category does not exist)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /categories/{category_id}/children:
    get:
      tags:
      - categories
      summary: Get Category Children
      description: Get multiple or a single sub category records of a given category
        through a GET request. This method supports all the GET parameters that are
        mentioned in the "Introduction" section of this documentation.
      operationId: getCategoryChildren
      parameters:
      - name: category_id
        in: path
        description: The parent category ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns an array of categories"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCategoryListing'
        "404":
          description: (Category does not exist)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /categories/search:
    post:
      tags:
      - categories
      summary: Search Categories
      description: Returns multiple categories that are respecting the given search
        condition. Further information about defining a search condition can be found
        in the <a href="/gambio-gx3-api/guides/search-example">Search Example</a>.
      operationId: searchCategories
      requestBody:
        description: The search condition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCondition'
        required: true
      responses:
        "200":
          description: "Upon success, returns an array of categories"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXCategory'
                x-content-type: application/json
      x-codegen-request-body-name: SearchCondition
  /category_icons:
    get:
      tags:
      - category_icons
      summary: Get Category Icons
      description: Returns a list of all category icon files which exists in the servers
        filesystem through a GET request.
      operationId: getCategoryIcons
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of filenames"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categoryIconGetResponse'
        "400":
          description: (No category icons)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - category_icons
      summary: Rename Icon File
      description: Use this method to rename an existing icon file.
      operationId: putCategoryIcons
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ updated filename"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultUpdateResponseWithFilenames'
        "400":
          description: (Missing parameters)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    post:
      tags:
      - category_icons
      summary: Upload Category Icon
      description: "Upload an icon image for the categories. Make sure this request\
        \ with Content-Type: multipart/form-data header instead of application/json.\
        \ Except from the file the POST request must also contain a \"filename\" value\
        \ with the final filename."
      operationId: uploadCategoryIcons
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/category_icons_body'
      responses:
        "201":
          description: "Upon success, returns the default success response with the\
            \ filename"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithFilename'
        "400":
          description: (No filename)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    delete:
      tags:
      - category_icons
      summary: Delete Category Icon
      description: Removes the category icon file from the server. This method will
        always provide a successful response even if the image file was not found.
      operationId: deleteCategoryIcon
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted filename"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithFilename'
        "400":
          description: (Missing parameters / Empty request body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /category_images:
    get:
      tags:
      - category_images
      summary: Get Category Images
      description: Get a list of all category image files which exists in the server's
        filesystem through a GET request.
      operationId: getCategoryImages
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of filenames"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categoryImageGetResponse'
    put:
      tags:
      - category_images
      summary: Rename Image File
      description: Use this method to rename an existing image file.
      operationId: renameCategoryImages
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ renamed filename"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultUpdateResponseWithFilenames'
        "400":
          description: (Missing parameters)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    post:
      tags:
      - category_images
      summary: Upload Category Image
      description: "Uploads an icon image for the categories. Make sure this request\
        \ with Content-Type: multipart/form-data header instead of application/json.\
        \ Except from the file the POST request must also contain a \"filename\" value\
        \ with the final filename."
      operationId: uploadCategoryImages
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/category_images_body'
        required: true
      responses:
        "201":
          description: "Upon success, returns the default success response with the\
            \ newly uploaded filename"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithFilename'
        "400":
          description: (Missing filename parameter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    delete:
      tags:
      - category_images
      summary: Delete Category Image
      description: Removes the category image file from the server. This method will
        always provide a successful response even if the image file was not found.
      operationId: deleteCategoryImages
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted filename"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithFilename'
        "400":
          description: (Missing parameter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /countries/{country_id}:
    get:
      tags:
      - countries
      summary: Get Countries (Single)
      description: Get a single country. This method is currently limited to only
        fetching a single country resource so make sure that you provide the country
        ID in the request URI.
      operationId: getCountries
      parameters:
      - name: country_id
        in: path
        description: The country ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the country resource."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCountry'
        "500":
          description: (Country not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "501":
          description: (The ID is missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /countries/{country_id}/zones:
    get:
      tags:
      - countries
      summary: Get Countries Zones
      description: Get a single countrys zones. This method is currently limited to
        only fetching a single countrys zone resource so make sure that you provide
        the country ID in the request URI.
      operationId: getCountriesZones
      parameters:
      - name: country_id
        in: path
        description: The country ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns an array of country zone resources."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXCountryZone'
                x-content-type: application/json
        "500":
          description: (Country not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "501":
          description: (The ID is missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /cronjobs/image_processing:
    post:
      tags:
      - cronjobs
      summary: Set ImageProcessing Trigger
      description: Set a trigger for the ImageProcessing cronjob to regenerate the
        product images using a POST request.
      operationId: setImageProcessingTrigger
      responses:
        "200":
          description: "Upon success, returns the default success response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithFilename'
        "400":
          description: (Cronjob data missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /customer_groups/{customer_group_id}:
    get:
      tags:
      - customer_groups
      summary: Get customer groups
      description: Get multiple or a single customer groups record through the GET
        method
      operationId: getCustomerGroups
      parameters:
      - name: customer_group_id
        in: path
        description: The customer group ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns an array of customer groups"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXCustomerGroup'
                x-content-type: application/json
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (CustomerGroups Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    delete:
      tags:
      - customer_groups
      summary: Delete Customer Groups
      description: Removes a customer groups record from the system. This method will
        always return success even if the customer group does not exist.
      operationId: deleteCustomerGroups
      parameters:
      - name: customer_group_id
        in: path
        description: Customer Group ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ customer group ID that was deleted"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithCustomerGroupID'
        "400":
          description: (Customer group ID invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    patch:
      tags:
      - customer_groups
      summary: Updates CustomerGroup entity
      description: Use this method if you want to update an existing customer groups
        record.
      operationId: updateCustomerGroups
      parameters:
      - name: customer_group_id
        in: path
        description: The customer group ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The customer group
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXCustomerGroup'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated customer group"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCustomerGroup'
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Entity not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXCustomerGroup
  /customer_groups:
    post:
      tags:
      - customer_groups
      summary: Create CustomerGroups
      description: This method enables the creation of a new CustomerGroups into the
        system.
      operationId: createCustomerGroup
      requestBody:
        description: The customer group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXCustomerGroup'
        required: true
      responses:
        "201":
          description: "Upon success, returns the newly created customer group"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCustomerGroup'
        "400":
          description: (Failed to create customer group)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXCustomerGroup
  /customers/{customer_ids}:
    delete:
      tags:
      - customers
      summary: Delete Customers
      description: "Removes customer records from the system. This method will always\
        \ return success even if the customers do not exist (due to internal CustomerWriteService\
        \ architecture decisions, which strive to avoid unnecessary failures). An\
        \ example script to demonstrate how to delete a customer is located under\
        \ `./docs/REST/samples/customer-service/remove_account.php` in the git clone."
      operationId: deleteCustomers
      parameters:
      - name: customer_ids
        in: path
        description: A comma-seperated list of customer IDs to delete
        required: true
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted customer IDs"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerArrayDeleteResponse'
        "400":
          description: (customer ID missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /customers:
    get:
      tags:
      - customers
      summary: Get Customers
      description: "Get customer records through the GET method. This resource supports\
        \ the following GET parameters as described in the first section of documentation:\
        \ sorting minimization, search, pagination and links. Additionally you can\
        \ filter customers by providing the GET parameter \"type=guest\" or \"type=registree\"\
        . Sort and pagination GET parameters do not apply when a single customer record\
        \ is selected (e.g. api.php/v2/customers/84). An example script to demonstrate\
        \ how to fetch customer data is located under `./docs/REST/samples/customer-service/get_admin_data.php`\
        \ in the git clone **Important**: Currently the CustomerReadService does not\
        \ support searching in address information of a customer."
      operationId: getCustomers
      parameters:
      - name: changed
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **changed/deleted** at the given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: modified
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **modified** at a given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: deleted
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **deleted** at the given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns the an array of customers."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXCustomer'
                x-content-type: application/json
        "400":
          description: (Invalid Type Filter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Customer Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - customers
      summary: Update Customers (Multiple)
      description: "Use this method to update multiple existing customer records.\
        \ It takes an array of GXCustomer Objects, identified by their <b>id</b> property."
      operationId: updateCustomers
      requestBody:
        description: An array of products to update.
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GXCustomerArray'
        required: true
      responses:
        "200":
          description: "Upon success, returns an array of the updated customers"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerArrayPutResponse'
        "400":
          description: (Missing data or ID invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXCustomerArray
    post:
      tags:
      - customers
      summary: Create Customers
      description: "This method enables the creation of new customers (whether registree\
        \ or a guest). Additionally the user can provide new address information or\
        \ just set the id of an existing one. Check the examples bellow. An example\
        \ script to demonstrate the creation of a new customer is located under `./docs/REST/samples/customer-service/create_account.php`\
        \ in the git clone, another one to demonstrate the creation of a guest customer\
        \ is located under `./docs/REST/samples/customer-service/create_guest_account.php`."
      operationId: createCustomers
      requestBody:
        description: An array of customers
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GXCustomerArray'
        required: true
      responses:
        "201":
          description: "Upon success, returns the customer that was created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerArrayPostResponse'
        "400":
          description: (Customer data missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "409":
          description: (Registree email already exists)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXCustomerArray
  /customers/{customer_id}:
    get:
      tags:
      - customers
      summary: Get Customer (Single)
      description: "Get a single customer record through the GET method. This resource\
        \ supports the following GET parameters as described in the first section\
        \ of documentation: sorting minimization, search, pagination and links. Additionally\
        \ you can filter customers by providing the GET parameter \"type=guest\" or\
        \ \"type=registree\". Sort and pagination GET parameters do not apply when\
        \ a single customer record is selected (e.g. api.php/v2/customers/84). An\
        \ example script to demonstrate how to fetch customer data is located under\
        \ `./docs/REST/samples/customer-service/get_admin_data.php` in the git clone\
        \ **Important**: Currently the CustomerReadService does not support searching\
        \ in address information of a customer."
      operationId: getCustomer
      parameters:
      - name: customer_id
        in: path
        description: The customer ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the customer with the provided ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCustomer'
        "400":
          description: (Invalid Type Filter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Customer Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - customers
      summary: Update Customer
      description: This method will update the information of an existing customer
        record. You will need to provide all the customer information with the request
        (except from password and customer id). Also note that you only have to include
        the "addressId" property. An example script to demonstrate how to update the
        admin accounts telephone number is located under `./docs/REST/samples/customer-service/update_admin_telephone.php`
        in the git clone.
      operationId: updateCustomer
      parameters:
      - name: customer_id
        in: path
        description: The customer ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the updated customer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCustomer'
        "400":
          description: (Customer data missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Customer not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "409":
          description: (Customer email already exists)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /customers/search:
    post:
      tags:
      - customers
      summary: Search Customers
      description: Returns multiple customers that are respecting the given search
        condition. Further information about defining a search condition can be found
        in the <a href="/gambio-gx3-api/guides/search-example">Search Example</a>.
      operationId: searchCustomer
      requestBody:
        description: The search condition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCondition'
        required: true
      responses:
        "200":
          description: "Upon success, returns an array of customers"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXCustomer'
                x-content-type: application/json
      x-codegen-request-body-name: SearchCondition
  /emails/{email_id}:
    get:
      tags:
      - emails
      summary: Get Emails
      description: "Get a single email record through the GET method. This resource\
        \ supports the following GET parameters as described in the first section\
        \ of documentation: sorting minimization, search, pagination. Additionally\
        \ you can filter emails by providing the GET parameter \"state=pending\" or\
        \ \"state=sent\". These filter parameters do not apply when a single emails\
        \ record is selected (e.g. api.php/v2/emails/84) or when the emails are searched\
        \ by the \"q\" parameter. To see an example usage take a look at `docs/REST/samples/email-service/fetch_email.php`"
      operationId: getEmails
      parameters:
      - name: email_id
        in: path
        description: The email ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns an email"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCustomerEmail'
        "400":
          description: (Invalid Type Filter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Customer Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    post:
      tags:
      - emails
      summary: Send Email
      description: This method will send and save a new or an existing email to the
        system. If you include mail attachments then they must already exist in the
        server. You will need to provide the full path to the file. To see an example
        usage take a look at `docs/REST/samples/email-service/send_email.php`
      operationId: sendEmail
      parameters:
      - name: email_id
        in: path
        description: The email ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The email
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXCustomerEmail'
        required: false
      responses:
        "201":
          description: "Upon success, returns the email send"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCustomerEmail'
        "400":
          description: (Email data missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Email record not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXCustomerEmail
    delete:
      tags:
      - emails
      summary: Delete Email
      description: Delete an email record from database. To see an example usage take
        a look at `docs/REST/samples/email-service/remove_email.php`.
      operationId: deleteEmail
      parameters:
      - name: email_id
        in: path
        description: The email ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithEmailID'
        "400":
          description: (Customer ID missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /emails:
    put:
      tags:
      - emails
      summary: Queue Email
      description: This method will queue a new email so that it can be send later
        (with the POST method). See the "post" method for parameter description. To
        see an example usage take a look at `docs/REST/samples/email-service/queue_email.php`
      operationId: queueEmail
      requestBody:
        description: The email
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXCustomerEmail'
        required: true
      responses:
        "200":
          description: "Upon success, returns the email that was queued."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXCustomerEmail'
        "400":
          description: (Email data missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXCustomerEmail
  /manufacturers/{manufacturer_id}:
    get:
      tags:
      - manufacturers
      summary: Get Manufacturers
      description: Get a single manufacturers record through the GET method
      operationId: getManufacturer
      parameters:
      - name: manufacturer_id
        in: path
        description: The manufacturers ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns a manufacturers"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXManufacturer'
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Manufacturers Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    delete:
      tags:
      - manufacturers
      summary: Delete Manufacturers
      description: "Removes a manufacturers record from the system. This method will\
        \ always return success even if the manufacturers does not exist (due to internal\
        \ ManufacturersWriteService architecture decisions, which strive to avoid\
        \ unnecessary failures)."
      operationId: deleteManufacturers
      parameters:
      - name: manufacturer_id
        in: path
        description: The manufacturers ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted manufacturer ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithManufacturersID'
        "500":
          description: (Manufacturer ID missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    patch:
      tags:
      - manufacturers
      summary: Updates Manufacturers
      description: Use this method if you want to update an existing manufacturers
        record.
      operationId: updateManufacturers
      parameters:
      - name: manufacturer_id
        in: path
        description: The manufacturer ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The manufacturer
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXManufacturer'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated manufacturer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXManufacturer'
        "400":
          description: (Missing manufacturer data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Manufacturer not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "500":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXManufacturer
  /manufacturers:
    get:
      tags:
      - manufacturers
      summary: Get Manufacturers (Multiple)
      description: Get multiple manufacturers record through the GET method
      operationId: getMultipleManufacturers
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of manufacturers"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXManufacturer'
                x-content-type: application/json
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Manufacturers Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    post:
      tags:
      - manufacturers
      summary: Create Manufacturers
      description: This method enables the creation of a new Manufacturers into the
        system.
      operationId: createManufacturers
      requestBody:
        description: The manufacturer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXManufacturer'
        required: true
      responses:
        "201":
          description: "Upon success, returns the created manufacturer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXManufacturer'
        "400":
          description: (Manufacturer data missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXManufacturer
  /manufacturers/search:
    post:
      tags:
      - manufacturers
      summary: Search Manufacturers
      description: Returns multiple manufacturers that are respecting the given search
        condition. Further information about defining a search condition can be found
        in the <a href="/gambio-gx3-api/guides/search-example">Search Example</a>.
      operationId: searchManufacturers
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The search condition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCondition'
        required: true
      responses:
        "200":
          description: "Upon success, returns an array of categories"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXCategory'
                x-content-type: application/json
      x-codegen-request-body-name: SearchCondition
  /order_statuses/{order_status_id}:
    get:
      tags:
      - order_statuses
      summary: Get order statuses (Single)
      description: Get a single order status entries.
      operationId: getOrderStatus
      parameters:
      - name: order_status_id
        in: path
        description: The order status ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns an order status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderStatus'
        "400":
          description: (Order status ID invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - order_statuses
      summary: Update Order Status
      description: This method updates a order status in the database.
      operationId: updateOrderStatuses
      parameters:
      - name: order_status_id
        in: path
        description: The order status ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The order status
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXOrderStatus'
        required: true
      responses:
        "201":
          description: "Upon success, returns the updated order status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderStatus'
        "400":
          description: (Order status ID invalid or missing data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXOrderStatus
    delete:
      tags:
      - order_statuses
      summary: Delete Order Status
      description: Removes a order status record from the system. This method will
        always return success.
      operationId: deleteOrderStatuses
      parameters:
      - name: order_status_id
        in: path
        description: The order status ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ order status ID that was deleted"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithOrderStatusID'
        "400":
          description: (Order status ID invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /order_statuses:
    get:
      tags:
      - order_statuses
      summary: Get order statuses (Multiple)
      description: Get a multiple order status entries.
      operationId: getOrderStatuses
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of order statuses"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXOrderStatus'
                x-content-type: application/json
        "400":
          description: (Order status ID invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    post:
      tags:
      - order_statuses
      summary: Create Order Status
      description: This method creates a new order status in the database.
      operationId: createOrderStatuses
      requestBody:
        description: The order status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXOrderStatus'
        required: true
      responses:
        "201":
          description: "Upon success, returns the order status that was created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderStatus'
        "400":
          description: (Order status data missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXOrderStatus
  /orders_history/{order_id}:
    get:
      tags:
      - orders_history
      summary: Get Order History (Single)
      description: Get a single order history record through a GET request.
      operationId: getOrdersHistory
      parameters:
      - name: order_id
        in: path
        description: The order ID to GET history for.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the order history resource"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXOrderStatusHistory'
                x-content-type: application/json
        "400":
          description: (Order History not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /parcel_services/{parcel_service_id}:
    get:
      tags:
      - parcel_services
      summary: Get Parcel Service (Single)
      description: Get a single parcel service record through the GET method.
      operationId: getSingleParcelServices
      parameters:
      - name: parcel_service_id
        in: path
        description: The parcel service ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the parcel service entity by given id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXParcelService'
        "404":
          description: (Parcel service not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - parcel_services
      summary: Updates Parcel Service
      description: Use this method if you want to update an existing parcel service.
      operationId: updateParcelService
      parameters:
      - name: parcel_service_id
        in: path
        description: The parcel service ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The updated parcel service.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXParcelService'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated parcel service"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXParcelService'
        "400":
          description: "(Missing or invalid id, missing or invalid request body)"
          content: {}
      x-codegen-request-body-name: GXParcelService
    delete:
      tags:
      - parcel_services
      summary: Delete Parcel Service
      description: Removes a parcel service entity from the system. This method will
        always return success even if the parcel service does not exist.
      operationId: deleteParcelService
      parameters:
      - name: parcel_service_id
        in: path
        description: The parcel service ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted parcel service ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithParcelServiceID'
        "400":
          description: (Missing or invalid id)
          content: {}
  /parcel_services:
    get:
      tags:
      - parcel_services
      summary: Get Parcel Services (Multiple)
      description: Get multiple parcel services records through the GET method.
      operationId: getMultipleParcelServices
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of parcel services"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXParcelService'
                x-content-type: application/json
    post:
      tags:
      - parcel_services
      summary: Create Parcel Service
      description: This method enables the creation of a new parcel service into the
        system.
      operationId: createParcelService
      requestBody:
        description: The created parcel service.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXParcelService'
        required: true
      responses:
        "201":
          description: "Upon success, returns the newly parcel service offer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXParcelService'
      x-codegen-request-body-name: GXParcelService
  /parcel_services/search:
    post:
      tags:
      - parcel_services
      summary: Search Parcel Services
      description: Returns multiple parcel services that are respecting the given
        search condition. Further information about defining a search condition can
        be found in the <a href="/gambio-gx3-api/guides/search-example">Search Example</a>.
      operationId: searchParcelService
      requestBody:
        description: The search condition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCondition'
        required: true
      responses:
        "200":
          description: "Upon success, returns an array of parcel services"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXParcelService'
                x-content-type: application/json
      x-codegen-request-body-name: SearchCondition
  /orders/{order_id}:
    get:
      tags:
      - orders
      summary: Get Order (Single)
      description: "Get a single order record through a GET request. This method supports\
        \ all the GET parameters that are mentioned in the \"Introduction\" section\
        \ of this documentation. Important: Whenever you make requests that will return\
        \ multiple orders the response will contain a smaller version of each order\
        \ record called order-list-item. This is done for better performance because\
        \ the creation of a complete order record takes significant time (many objects\
        \ are involved). If you still need the complete data of an order record you\
        \ will have to make an extra GET request with the ID provided."
      operationId: getOrders
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the order resource"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXOrder'
                x-content-type: application/json
    put:
      tags:
      - orders
      summary: Update Order
      description: "Use this method to update an existing order record. It uses the\
        \ complete order JSON resource so it might be useful to fetch it through a\
        \ GET request, alter its values and PUT it back in order to perform the update\
        \ operation. Take a look in the POST method for more detailed explanation\
        \ on every resource property. To see an example usage take a look at `docs/REST/samples/order-service/update_order.php`"
      operationId: updateOrder
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the updated order"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrder'
        "400":
          description: (Missing data or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    delete:
      tags:
      - orders
      summary: Delete Order
      description: Remove an entire Order record from the database. This method will
        also remove the order-items along with their attributes and the order-total
        records. To see an example usage take a look at `docs/REST/samples/order-service/remove_order.php`
      operationId: deleteOrders
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ order ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithOrderID'
        "400":
          description: (Order ID missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /orders/{order_id}/items/{item_id}:
    get:
      tags:
      - orders
      summary: Get Order Item (Single)
      description: "Get a single order item from an existing order. All the GET manipulation\
        \ parameters are applied with this method (search, sort, minimize, paginate\
        \ etc)."
      operationId: getOrderItem
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: item_id
        in: path
        description: The item ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns a single order item"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderItem'
    put:
      tags:
      - orders
      summary: Update Order Item
      description: Use this method to update an existing order item. Use the same
        order item JSON format as in the POST method.
      operationId: updateOrderItems
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: item_id
        in: path
        description: The item ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The order item
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXOrderItem'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated orders items"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderItem'
        "400":
          description: (Missing data or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Order item ID does not exist in given order)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXOrderItem
    delete:
      tags:
      - orders
      summary: Delete Order Item
      description: Use this method to remove an order item from an existing order.
      operationId: deleteOrderItems
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: item_id
        in: path
        description: The item ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with order\
            \ and item ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithOrderIDAndOrderItemID'
        "400":
          description: (Missing ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Item not found inside the order)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /orders/{order_id}/items/{item_id}/attributes/{attribute_id}/Property:
    get:
      tags:
      - orders
      summary: Get Order Item Attribute/Property (Single)
      description: Returns single order item attribute/property record through a GET
        request. This method supports all the GET parameters that are mentioned in
        the "Introduction" section of this documentation.
      operationId: getOrdersItemsAttributeProperty
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: item_id
        in: path
        description: The item ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: attribute_id
        in: path
        description: The attribute ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the order items attributes"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderItemAttributes'
    put:
      tags:
      - orders
      summary: Update Order Item Attribute/Property
      description: Use this method to update an existing order item attribute record.
        It uses the same attribute JSON format as in the "Create Order Item Attribute"
        method.
      operationId: updateOrdersItemsAttributesProperty
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: item_id
        in: path
        description: The item ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: attribute_id
        in: path
        description: The attribute ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The order item attributes
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXOrderItemAttributes'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated order item attributes"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderItemAttributes'
        "400":
          description: (Missing data or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXOrderItemAttributes
    delete:
      tags:
      - orders
      summary: Delete Order Item Attribute/Property
      description: Removes a single order item attribute/property entry from an existing
        order item record.
      operationId: removeOrdersItemsAttribute
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: item_id
        in: path
        description: The item ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: attribute_id
        in: path
        description: The attribute ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ relevant IDs"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithOrderIDAndOrderItemIDAndOrderItemAttributeID'
        "400":
          description: (Missing ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /orders/{order_id}/totals/{total_id}:
    put:
      tags:
      - orders
      summary: Update Order Total
      description: Use this method to update an existing order total. Use the same
        order total JSON format as in the POST method.
      operationId: updateOrderTotal
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: total_id
        in: path
        description: The total ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The order
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXOrderTotal'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated order totals"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderTotal'
        "400":
          description: (Missing data or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Provided order total not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXOrder
    delete:
      tags:
      - orders
      summary: Delete Order Total
      description: Use this method to remove an order total from an existing order.
      operationId: deleteOrderTotals
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: total_id
        in: path
        description: The total ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ order and order total ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithOrderIDAndOrderTotalID'
        "400":
          description: (Order total ID missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Order total ID does not exist in given order)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /orders:
    get:
      tags:
      - orders
      summary: Get Orders (Multiple)
      description: "Get multiple order list item records through a GET request. This\
        \ method supports all the GET parameters that are mentioned in the \"Introduction\"\
        \ section of this documentation. Important: Whenever you make requests that\
        \ will return multiple orders the response will contain a smaller version\
        \ of each order record called order-list-item. This is done for better performance\
        \ because the creation of a complete order record takes significant time (many\
        \ objects are involved). If you still need the complete data of an order record\
        \ you will have to make an extra GET request with the ID provided."
      operationId: getOrdersMultiple
      parameters:
      - name: changed
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **changed/deleted** at the given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: modified
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **modified** at a given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: deleted
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **deleted** at the given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns the order list item resources"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXOrderListItem'
                x-content-type: application/json
    post:
      tags:
      - orders
      summary: Create Order
      description: This method enables the creation of a new order into the system.
        The order can be bound to an existing customer or be standalone as implemented
        in the OrderService. Make sure that you check the Order resource representation.
        To see an example usage take a look at `docs/REST/samples/order-service/create_order.php`.
      operationId: createOrder
      requestBody:
        description: The order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXOrder'
        required: true
      responses:
        "201":
          description: "Upon success, returns the order that was created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrder'
        "400":
          description: (Order data missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXOrder
  /orders/{order_id}/history:
    get:
      tags:
      - orders
      summary: Get Order History (Multiple)
      description: Returns multiple order status history records. This method supports
        all the GET parameters that are mentioned in the "Introduction" section of
        this documentation.
      operationId: getOrderHistories
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns an array of Order Histories"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXOrderStatusHistory'
                x-content-type: application/json
  /orders/{order_id}/history/{history_id}:
    get:
      tags:
      - orders
      summary: Get Order History (Single)
      description: Returns multiple or a single order status history records. This
        method supports all the GET parameters that are mentioned in the "Introduction"
        section of this documentation.
      operationId: getOrderHistory
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: history_id
        in: path
        description: The history ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns a single Order History"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderStatusHistory'
  /orders/{order_id}/items:
    get:
      tags:
      - orders
      summary: Get Order Items (Multiple)
      description: "Get multiple order items from an existing order. All the GET manipulation\
        \ parameters are applied with this method (search, sort, minimize, paginate\
        \ etc)."
      operationId: getOrderItems
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns a an array of order items"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXOrderItem'
                x-content-type: application/json
    post:
      tags:
      - orders
      summary: Create Order Item
      description: Use this method to create a new order item to an existing order.
        The order item JSON format must be the same with the "items" entries in the
        original order item.
      operationId: createOrderItem
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The order item
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXOrderItem'
        required: true
      responses:
        "201":
          description: "Upon success, returns the created order item"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderItem'
        "400":
          description: (Order Item data missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXOrderItem
  /orders/{order_id}/items/{item_id}/attributes/Property:
    get:
      tags:
      - orders
      summary: Get Order Item Attributes/Properties (Multiple)
      description: Returns multiple order item attribute/property records through
        a GET request. This method supports all the GET parameters that are mentioned
        in the "Introduction" section of this documentation.
      operationId: getOrdersItemsAttributesProperty
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: item_id
        in: path
        description: The item ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns an array of attributes"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXOrderItemAttributes'
                x-content-type: application/json
  /orders/{order_id}/payment_details:
    get:
      tags:
      - orders
      summary: Get Order Payment Details
      description: Get the payment details for a specific order record through a GET
        request. This method supports all the GET parameters that are mentioned in
        the "Introduction" section of this documentation.
      operationId: getOrderPaymentDetails
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the payment details of the order resource"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXPaymentDetails'
  /orders/{order_id}/totals:
    get:
      tags:
      - orders
      summary: Get Order Totals (Multiple)
      description: "Returns all single order totals from an existing order. All the\
        \ GET manipulation parameters are applied with this method (search, sort,\
        \ minimize, paginate etc)."
      operationId: getOrderTotals
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns one or many order totals"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXOrderTotal'
                x-content-type: application/json
    post:
      tags:
      - orders
      summary: Create Order Total
      description: Creates a new order total entry to the existing order. The order
        total JSON format must be the same with the "totals" entries in the original
        order total.
      operationId: createOrderTotal
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The order total
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXOrderTotal'
        required: true
      responses:
        "201":
          description: "Upon success, returns the order total"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderTotal'
        "400":
          description: (Order total data missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXOrderTotal
  /orders/{order_id}/totals/{totals_id}:
    get:
      tags:
      - orders
      summary: Get Order Total
      description: "Returns a single order total from an existing order. All the GET\
        \ manipulation parameters are applied with this method (search, sort, minimize,\
        \ paginate etc)."
      operationId: getOrderTotal
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: totals_id
        in: path
        description: The totals ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns one order total"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderTotal'
  /orders/{order_id}/tracking_code:
    get:
      tags:
      - orders
      summary: Get Order Tracking Codes (Multiple) (deprecated)
      description: Get an array of all tracking code records of an order through the
        GET method.
      operationId: getOrderTrackingCodesDeprecated
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns an array of Tracking Codes"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXTrackingCode'
                x-content-type: application/json
    post:
      tags:
      - orders
      summary: Create Order Tracking Code (deprecated)
      description: Create a new tracking code for an order.
      operationId: postTrackingCodeDeprecated
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The tracking code to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXTrackingCodeRequestBody'
        required: true
      responses:
        "201":
          description: "Upon success, returns the newly created tracking code."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXTrackingCode'
                x-content-type: application/json
        "400":
          description: (Missing data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXTrackingCodeRequestBody
  /orders/{order_id}/tracking_codes:
    get:
      tags:
      - orders
      summary: Get Order Tracking Codes (Multiple)
      description: Get an array of all tracking code records of an order through the
        GET method.
      operationId: getOrderTrackingCodes
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns an array of Tracking Codes"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXTrackingCode'
                x-content-type: application/json
    post:
      tags:
      - orders
      summary: Create Order Tracking Code
      description: Create a new tracking code for an order. See <a href="/gambio-gx3-api/resources/gxtrackingcode">GXTrackingCode</a>
        resource.
      operationId: postTrackingCode
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The tracking code to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXTrackingCodeRequestBody'
        required: true
      responses:
        "201":
          description: "Upon success, returns the newly created tracking code."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXTrackingCode'
                x-content-type: application/json
        "400":
          description: (Missing data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXTrackingCode
  /orders/{order_id}/status:
    patch:
      tags:
      - orders
      summary: Update Order Status
      description: Use this method if you want to update the status of an existing
        order and create an order history entry. The status history entry must also
        contain extra information as shown in the JSON example.
      operationId: updateOrderStatus
      parameters:
      - name: order_id
        in: path
        description: The orders ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The order status
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXOrderStatusHistory'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated order status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderStatus'
        "400":
          description: (Missing data or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXOrderStatusHistory
  /orders/{order_id}/items/{item_id}/attributes:
    post:
      tags:
      - orders
      summary: Create Order Item Attribute
      description: "Use this method to create a new order item attribute to an existing\
        \ order item. The order item attribute JSON object is the same as the one\
        \ included in the full order representation. There are two different order\
        \ item variation systems in the shop, the \"attributes\" and the \"properties\"\
        . Both of them define a variation of an order item (e.g. color, size etc).\
        \ You must always use only one of them for a single order item."
      operationId: createOrderTimeAttribute
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: item_id
        in: path
        description: The item ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The order item attributes
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXOrderItemAttributes'
        required: true
      responses:
        "201":
          description: "Upon success, returns the order item attributes"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXOrderItemAttributes'
        "400":
          description: (Order item attribute data missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXOrderItemAttributes
  /orders/search:
    post:
      tags:
      - orders
      summary: Search Orders
      description: Returns multiple orders that are respecting the given search condition.
        Further information about defining a search condition can be found in the
        <a href="/gambio-gx3-api/guides/search-example">Search Example</a>.
      operationId: searchOrders
      requestBody:
        description: The search condition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCondition'
        required: true
      responses:
        "200":
          description: "Upon success, returns the order list item resources"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXOrderListItem'
                x-content-type: application/json
      x-codegen-request-body-name: SearchCondition
  /payment_details/{order_id}:
    get:
      tags:
      - payment_details
      summary: Get Payment Details
      description: Get the payment details for a specific order record through a GET
        request. This method supports all the GET parameters that are mentioned in
        the "Introduction" section of this documentation.
      operationId: getPaymentDetails
      parameters:
      - name: order_id
        in: path
        description: The order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the payment details of the order resource"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXPaymentDetails'
  /product_images:
    get:
      tags:
      - product_images
      summary: Get Product Images
      description: Get a list of all product image files which exists in the server's
        filesystem through a GET request.
      operationId: getProductImage
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of files"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/productImageGetResponse'
                x-content-type: application/json
    put:
      tags:
      - product_images
      summary: Rename Image File
      description: Use this method to rename an existing image file.
      operationId: renameImageFile
      requestBody:
        description: The filenames
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXFilenameChange'
        required: false
      responses:
        "200":
          description: "Upon success, returns the old and new name"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultUpdateResponseWithFilenames'
      x-codegen-request-body-name: GXFilenameChange
    post:
      tags:
      - product_images
      summary: Upload Product Image
      description: "Uploads an image file for the products. Make this request without\
        \ the \"Content-Type: application/json\". Except from the file the POST request\
        \ must also contain a \"filename\" value with the final filename."
      operationId: uploadProductImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/product_images_body'
        required: true
      responses:
        "201":
          description: "Upon success, returns the default success response with the\
            \ new filename"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithFilename'
        "400":
          description: (No image file provided)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    delete:
      tags:
      - product_images
      summary: Delete Product Image
      description: Remove the product image file from the server. This method will
        always provide a successful response even if the image file was not found.
      operationId: deleteProductImage
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted filename"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithFilename'
        "400":
          description: (Missing data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /product_prices/{product_id}:
    get:
      tags:
      - product_prices
      summary: Get Product Prices
      description: "Get prices for customer groups and their graduated prices, if\
        \ exists."
      operationId: getProductPrices
      parameters:
      - name: product_id
        in: path
        description: The product id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns all price information for the given\
            \ product"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXProductPrices'
                x-content-type: application/json
        "400":
          description: (Missing or invalid id)
          content: {}
        "404":
          description: (Product not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - product_prices
      summary: Update Product Prices
      description: Updates product price data for the product of the given id. All
        price information gets replaced with the new one.
      operationId: putProductPrices
      parameters:
      - name: product_id
        in: path
        description: The product id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Product price data
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GXProductPrices'
        required: true
      responses:
        "200":
          description: "Upon success, returns all price information for the updated\
            \ product"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXProductPrices'
        "400":
          description: (Missing or invalid id)
          content: {}
        "404":
          description: (Product not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXProductPrices
    delete:
      tags:
      - product_prices
      summary: Delete Product Prices
      description: Deletes all customer group- and graduated prices of a product.
        This method will always return success even if the product does not exist.
      operationId: deleteProductPrices
      parameters:
      - name: product_id
        in: path
        description: The product id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ product id of the deleted prices"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithProductID'
        "400":
          description: (Missing or invalid id)
          content: {}
  /product_prices/{product_id}/customer_groups/{customer_group_id}/{quantity}:
    get:
      tags:
      - product_prices
      summary: Get Graduated Product Price
      description: Get price information for given customer group and product quantity.
        Graduated- and customer group prices are included in the response
      operationId: getProductQuantityPrices
      parameters:
      - name: product_id
        in: path
        description: The product id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: customer_group_id
        in: path
        description: The customer group id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: quantity
        in: path
        description: Products quantity
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: float
      responses:
        "200":
          description: "Upon success, returns price information for the given customer\
            \ group and quantity"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXProductQuantityPrice'
                x-content-type: application/json
        "400":
          description: (Missing or invalid id)
          content: {}
        "404":
          description: (Product not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /quantity_units/{quantity_unit_id}:
    get:
      tags:
      - quantity_units
      summary: Get Quantity Units (Single)
      description: Get a single quantity unit record through the GET method
      operationId: getQuantityUnit
      parameters:
      - name: quantity_unit_id
        in: path
        description: The quantity unit ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns a Quantity Unit"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXQuantityUnit'
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (QuantityUnits Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    delete:
      tags:
      - quantity_units
      summary: Delete Quantity Units
      description: Removes a quantity units record from the system. This method will
        always return success even if the quantity unit does not exist.
      operationId: deleteQuantityUnits
      parameters:
      - name: quantity_unit_id
        in: path
        description: The quantity unit ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted quantityID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithQuantityUnitID'
        "400":
          description: (Invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    patch:
      tags:
      - quantity_units
      summary: Updates Quantity Units
      description: Use this method if you want to update an existing quantity units
        record.
      operationId: updateQuantityUnitEntity
      parameters:
      - name: quantity_unit_id
        in: path
        description: The quantity unit ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The quantity unit
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXQuantityUnit'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated Quantity Unit"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXQuantityUnit'
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Entity not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXQuantityUnit
  /quantity_units:
    get:
      tags:
      - quantity_units
      summary: Get Quantity Units (Multiple)
      description: Get multiple quantity unit records through the GET method
      operationId: getQuantityUnits
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of Quantity Units"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXQuantityUnit'
                x-content-type: application/json
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (QuantityUnits Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    post:
      tags:
      - quantity_units
      summary: Create Quantity Units
      description: This method enables the creation of a new QuantityUnits into the
        system.
      operationId: createQuantityUnits
      requestBody:
        description: The Quantity Unit.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXQuantityUnit'
        required: true
      responses:
        "200":
          description: "Upon success, returns the newly created Quantity Unit"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXQuantityUnit'
      x-codegen-request-body-name: GXQuantityUnit
  /products/{product_id}/links:
    get:
      tags:
      - products
      summary: Get Product Links
      description: Get all product or category links associated with a specific product.
      operationId: getProductLinks
      parameters:
      - name: product_id
        in: path
        description: The product or category ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns an array of IDs for product or category\
            \ links"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/productLinksGetResponse'
                x-content-type: application/json
    put:
      tags:
      - products
      summary: Update Product Link
      description: Changes an existing product to category link.
      operationId: updateProductLink
      parameters:
      - name: product_id
        in: path
        description: The product link ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The old and new category ID
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXProductLinkPutRequest'
        required: true
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ product ID and category IDs"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithProductIDAndCategoryIDs'
      x-codegen-request-body-name: GXProductLinkPutRequest
    post:
      tags:
      - products
      summary: Create Product Link
      description: Creates a new product to category record in the system.
      operationId: createProductLink
      parameters:
      - name: product_id
        in: path
        description: The product ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The category ID
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/productCategoryLinkID'
        required: true
      responses:
        "201":
          description: "Upon success, returns the default success response with the\
            \ product and category ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithProductIDAndCategoryID'
      x-codegen-request-body-name: categoryId
    delete:
      tags:
      - products
      summary: Delete Product Link
      description: "Deletes an existing product to category link. If there is no categoryId\
        \ property set, all the product links will be removed."
      operationId: deleteProductLink
      parameters:
      - name: product_id
        in: path
        description: The product or category link ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The category ID
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/productCategoryLinkID'
        required: true
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ product ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithProductID'
      x-codegen-request-body-name: categoryId
  /products/{product_ids}:
    delete:
      tags:
      - products
      summary: Delete Products (Multiple)
      description: Removes multiple product records from the database.
      operationId: deleteProducts
      parameters:
      - name: product_ids
        in: path
        description: A comma-seperated list of product IDs to delete
        required: true
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted product IDs"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsDeleteSuccessResponse'
        "400":
          description: (Product ID missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /products:
    get:
      tags:
      - products
      summary: Get Products
      description: Get a multiple product records through a GET request. This method
        supports all the GET parameters that are mentioned in the "Introduction" section
        of this documentation. To see an example usage take a look at `docs/REST/samples/product-service/remove_product.php`
      operationId: getProducts
      parameters:
      - name: changed
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **changed/deleted** at the given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: modified
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **modified** at a given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: deleted
        in: query
        description: "*Optional parameter*. If provided, receive a change history\
          \ of items that were **deleted** at the given date."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of products."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXProductListing'
                x-content-type: application/json
        "404":
          description: (Product does not exist)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - products
      summary: Update Products (Multiple)
      description: "Use this method to update multiple existing product records. It\
        \ takes an array of GXProduct Objects, identified by their <b>id</b> property."
      operationId: updateProducts
      requestBody:
        description: An array of products to update.
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GXProductArray'
        required: true
      responses:
        "200":
          description: "Upon success, returns an array of the updated products"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productArrayPutResponse'
        "400":
          description: (Missing data or ID invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXProductArray
    post:
      tags:
      - products
      summary: Create Products
      description: "Creates new product records in the system. May be provided an\
        \ array of product records, for bulk insertion. For single insertion, provide\
        \ a single GXProduct object."
      operationId: createProducts
      requestBody:
        description: An array of products
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GXProductArray'
        required: true
      responses:
        "201":
          description: "Upon success, returns the newly created product(s)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productArrayPostResponse'
        "400":
          description: (Missing data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXProductArray
  /products/{product_id}:
    get:
      tags:
      - products
      summary: Get Products
      description: Get a single product record through a GET request. This method
        supports all the GET parameters that are mentioned in the "Introduction" section
        of this documentation. To see an example usage take a look at `docs/REST/samples/product-service/remove_product.php`
      operationId: getProduct
      parameters:
      - name: product_id
        in: path
        description: The product ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the specified product."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXProduct'
        "404":
          description: (Product does not exist)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - products
      summary: Update Product
      description: Use this method to update an existing product record. Take a look
        in the POST method for more detailed explanation on every resource property.
        To see an example usage consider `docs/REST/samples/product-service/update_product.php`
      operationId: updateProduct
      parameters:
      - name: product_id
        in: path
        description: The product ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The product
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXProduct'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated product"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXProduct'
        "400":
          description: (Missing data or ID invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXProduct
  /products/{product_id}/product_prices:
    get:
      tags:
      - products
      summary: Get Product Prices
      description: "Get prices for customer groups and their graduated prices, if\
        \ exists."
      operationId: getProductProductPrices
      parameters:
      - name: product_id
        in: path
        description: The product id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns all price information for the given\
            \ product"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXProductPrices'
        "400":
          description: (Missing or invalid id)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Product not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - products
      summary: Update Product Prices
      description: Updates product price data for the product of the given id. All
        price information gets replaced with the new one.
      operationId: putProductProductPrices
      parameters:
      - name: product_id
        in: path
        description: The product id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Product price data
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GXProductPrices'
        required: true
      responses:
        "200":
          description: "Upon success, returns all price information for the updated\
            \ product"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXProductPrices'
        "400":
          description: (Missing or invalid id)
          content: {}
        "404":
          description: (Product not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXProductPrices
  /products/{product_id}/product_prices/customer_groups/{customer_group_id}/{quantity}:
    get:
      tags:
      - products
      summary: Get Graduated Product Price
      description: Get price information for given customer group and product quantity.
        Graduated- and customer group prices are included in the response
      operationId: getProductQuantityPrices
      parameters:
      - name: product_id
        in: path
        description: The product id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: customer_group_id
        in: path
        description: The customer group id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: quantity
        in: path
        description: Products quantity
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: float
      responses:
        "200":
          description: "Upon success, returns price information for the given customer\
            \ group and quantity"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXProductQuantityPrice'
        "400":
          description: (Missing or invalid id)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Product not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /products/search:
    post:
      tags:
      - products
      summary: Search Products
      description: Returns multiple products that are respecting the given search
        condition. Further information about defining a search condition can be found
        in the <a href="/gambio-gx3-api/guides/search-example">Search Example</a>.
      operationId: searchProducts
      requestBody:
        description: The search condition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCondition'
        required: true
      responses:
        "200":
          description: "Upon success, returns an array of products"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXProduct'
                x-content-type: application/json
      x-codegen-request-body-name: SearchCondition
  /shop_information:
    get:
      tags:
      - shop_information
      summary: Get Shop Information
      description: "Returns shop information like shop url, shop name, shop owner\
        \ address data, shop template name and shop version."
      operationId: getShopInformation
      responses:
        "200":
          description: Returns the shop information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXShopInfo'
  /reviews/{review_id}:
    get:
      tags:
      - reviews
      summary: Get Review (Single)
      description: Get a single review through the GET method.
      operationId: getReview
      parameters:
      - name: review_id
        in: path
        description: The review ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns a GXReview"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXReview'
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Review Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - reviews
      summary: Update Review
      description: Use this method to update an existing review record.
      operationId: updateReviews
      parameters:
      - name: review_id
        in: path
        description: The review ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The review to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXReview'
        required: true
      responses:
        "201":
          description: "Upon success, returns the updated review"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXReview'
                x-content-type: application/json
        "400":
          description: (Empty request body / Review record ID was not provided or
            is invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXReview
    delete:
      tags:
      - reviews
      summary: Delete Review
      description: Removes a review record from the database.
      operationId: deleteReviews
      parameters:
      - name: review_id
        in: path
        description: The ID of the review to be removed
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ review ID"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reviewSuccessResponse'
                x-content-type: application/json
        "400":
          description: (Invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /reviews:
    get:
      tags:
      - reviews
      summary: Get Reviews (Multiple)
      description: Get an array of all review records through the GET method.
      operationId: getReviews
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of Reviews"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXReview'
                x-content-type: application/json
    post:
      tags:
      - reviews
      summary: Create Review
      description: Create a new review.
      operationId: postReviews
      requestBody:
        description: The review to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXReview'
        required: true
      responses:
        "201":
          description: "Upon success, returns the newly created review."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXReview'
                x-content-type: application/json
        "400":
          description: (Missing data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXReview
  /special_offers/{special_offer_id}:
    get:
      tags:
      - special_offers
      summary: Get Special Offers
      description: Gets a single special offer record through the GET method.
      operationId: getSpecialOffers
      parameters:
      - name: special_offer_id
        in: path
        description: The special offer ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the special offer entity by given id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXSpecialOffer'
        "404":
          description: (Special offer not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - special_offers
      summary: Updates Special Offers
      description: Use this method if you want to update an existing special offer.
      operationId: updateSpecialOffer
      parameters:
      - name: special_offer_id
        in: path
        description: The special offer ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The updated special offer.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXSpecialOffer'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated special offer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXSpecialOffer'
        "400":
          description: "(Missing or invalid id, missing or invalid request body)"
          content: {}
      x-codegen-request-body-name: GXSpecialOffer
    delete:
      tags:
      - special_offers
      summary: Removes Special Offers
      description: Removes a special offer record from the system. This method will
        always return success even if the vpe does not exist.
      operationId: deleteSpecialOffer
      parameters:
      - name: special_offer_id
        in: path
        description: The special offer ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted special offer ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithSpecialOfferID'
        "400":
          description: (Missing or invalid id)
          content: {}
  /special_offers:
    get:
      tags:
      - special_offers
      summary: Get Special Offers (Multiple)
      description: Get multiple special offers record through the GET method.
      operationId: getMultipleSpecialOffers
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of paginated special offer\
            \ items"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXSpecialOffer'
                x-content-type: application/json
    post:
      tags:
      - special_offers
      summary: Create Special Offers
      description: This method enables the creation of a new special offer into the
        system.
      operationId: createSpecialOffers
      requestBody:
        description: The created special offer.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXSpecialOffer'
        required: true
      responses:
        "201":
          description: "Upon success, returns the newly created special offer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXSpecialOffer'
      x-codegen-request-body-name: GXSpecialOffer
  /special_offers/search:
    post:
      tags:
      - special_offers
      summary: Search Special Offer
      description: Returns multiple special offers that are respecting the given search
        condition. Further information about defining a search condition can be found
        in the <a href="/gambio-gx3-api/guides/search-example">Search Example</a>.
      operationId: searchSpecialOffer
      requestBody:
        description: The search condition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCondition'
        required: true
      responses:
        "200":
          description: "Upon success, returns an array of special offers"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXSpecialOffer'
                x-content-type: application/json
      x-codegen-request-body-name: SearchCondition
  /tax_classes:
    get:
      tags:
      - tax
      summary: Get Tax Classes
      description: Get all tax classes or a single tax class including tax rates.
      operationId: getTaxClasses
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of tax classes"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXTaxClass'
                x-content-type: application/json
        "400":
          description: (Invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Tax Class Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /tax_rates:
    get:
      tags:
      - tax
      summary: Get Tax Rates
      description: Get all tax rates or a single tax rate.
      operationId: getTaxRates
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of tax rates"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXTaxClassRate'
                x-content-type: application/json
        "400":
          description: (Invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Tax Rate Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /tax_zones:
    get:
      tags:
      - tax
      summary: Get Tax Zones
      description: Get all tax zones or a single tax zone.
      operationId: getTaxZones
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of tax zones"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXTaxZone'
                x-content-type: application/json
        "400":
          description: (Invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Tax Class Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /tracking_code/{tracking_code_id}:
    get:
      tags:
      - tracking_code
      summary: Get Tracking Code (Single) (deprecated)
      description: Get a single tracking code through the GET method.
      operationId: getTrackingCodeDeprecated
      parameters:
      - name: tracking_code_id
        in: path
        description: The tracking code ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns a GXTrackingCode"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXTrackingCode'
                x-content-type: application/json
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Tracking Code Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    delete:
      tags:
      - tracking_code
      summary: Delete Tracking Code (deprecated)
      description: Removes a tracking code record from the database.
      operationId: deleteTrackingCodeDeprecated
      parameters:
      - name: tracking_code_id
        in: path
        description: The tracking code ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ tracking code ID"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/trackingCodeSuccessResponse'
                x-content-type: application/json
        "400":
          description: (Invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /tracking_code:
    get:
      tags:
      - tracking_code
      summary: Get Tracking Codes (Multiple) (deprecated)
      description: Get an array of all tracking code records through the GET method.
      operationId: getTrackingCodesDeprecated
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of Tracking Codes"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXTrackingCode'
                x-content-type: application/json
  /tracking_codes/{tracking_code_id}:
    get:
      tags:
      - tracking_codes
      summary: Get Tracking Code (Single)
      description: Get a single tracking code through the GET method.
      operationId: getTrackingCode
      parameters:
      - name: tracking_code_id
        in: path
        description: The tracking code ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns a GXTrackingCode"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXTrackingCode'
                x-content-type: application/json
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Tracking Code Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    delete:
      tags:
      - tracking_codes
      summary: Delete Tracking Code
      description: Removes a tracking code record from the database.
      operationId: deleteTrackingCodes
      parameters:
      - name: tracking_code_id
        in: path
        description: The tracking code ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ tracking code ID"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/trackingCodeSuccessResponse'
                x-content-type: application/json
        "400":
          description: (Invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /tracking_codes:
    get:
      tags:
      - tracking_codes
      summary: Get Tracking Codes (Multiple)
      description: Get an array of all tracking code records through the GET method.
      operationId: getTrackingCodes
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of Tracking Codes"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXTrackingCode'
                x-content-type: application/json
  /vpe/{vpe_id}:
    get:
      tags:
      - vpe
      summary: Get VPE (Single)
      description: Get a single vpe record through the GET method
      operationId: getVPE
      parameters:
      - name: vpe_id
        in: path
        description: The VPE ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns a VPE"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXVPE'
        "404":
          description: (VPE Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    delete:
      tags:
      - vpe
      summary: Delete VPE
      description: "Removes a vpe record from the system. This method will always\
        \ return success even if the vpe does not exist (due to internal VPEWriteService\
        \ architecture decisions, which strive to avoid unnecessary failures)."
      operationId: deleteVPE
      parameters:
      - name: vpe_id
        in: path
        description: The VPE ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ deleted VPE ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultSuccessResponseWithVpeID'
        "400":
          description: (Missing ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    patch:
      tags:
      - vpe
      summary: Updates VPE
      description: Use this method if you want to update an existing vpe record.
      operationId: updateVPE
      parameters:
      - name: vpe_id
        in: path
        description: The VPE ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The updated VPE
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GXVPE'
        required: true
      responses:
        "200":
          description: "Upon success, returns the updated VPE"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXVPE'
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXVPE
  /vpe:
    post:
      tags:
      - vpe
      summary: Create VPE
      description: This method enables the creation of a new VPE into the system.
      operationId: createVPE
      requestBody:
        description: The VPE to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXVPE'
        required: true
      responses:
        "201":
          description: "Upon success, returns the newly created VPE"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXVPE'
        "400":
          description: (Missing data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXVPE
  /withdrawals/{withdrawal_id}:
    get:
      tags:
      - withdrawal
      summary: Get Withdrawal (Single)
      description: Get a single withdrawal through the GET method.
      operationId: getWithdrawal
      parameters:
      - name: withdrawal_id
        in: path
        description: The withdrawal ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns a GXWithdrawal"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXWithdrawal'
                x-content-type: application/json
        "400":
          description: (Missing or invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "404":
          description: (Withdrawal Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
    put:
      tags:
      - withdrawal
      summary: Update Withdrawal
      description: Use this method to update an existing withdrawal record.
      operationId: updateWithdrawals
      parameters:
      - name: withdrawal_id
        in: path
        description: The withdrawal ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The withdrawal to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXWithdrawal'
        required: true
      responses:
        "201":
          description: "Upon success, returns the updated withdrawal"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXWithdrawal'
                x-content-type: application/json
        "400":
          description: (Empty request body / Withdrawal record ID was not provided
            or is invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXWithdrawal
    delete:
      tags:
      - withdrawal
      summary: Delete Withdrawal
      description: Removes a withdrawal record from the database.
      operationId: deleteWithdrawals
      parameters:
      - name: withdrawal_id
        in: path
        description: The withdrawal ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the default success response with the\
            \ withdrawal ID"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/withdrawalSuccessResponse'
                x-content-type: application/json
        "400":
          description: (Invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
  /withdrawals:
    get:
      tags:
      - withdrawal
      summary: Get Withdrawals (Multiple)
      description: Get an array of withdrawals through the GET method.
      operationId: getWithdrawals
      parameters:
      - name: per_page
        in: query
        description: "*Optional parameter*. If provided, limits the amount of records\
          \ in the response. Defaults to 50."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 50
      - name: page
        in: query
        description: "*Optional parameter*. If provided, displays the specified page.\
          \ Defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: sort
        in: query
        description: "*Optional parameter*. Sorts by the desired properties. Maximum\
          \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: '*Optional parameter*. Search for a url-encoded keyword.'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: '*Optional parameter*. If provided limits the properties to be
          included in the response.'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Upon success, returns an array of withdrawals"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXWithdrawal'
                x-content-type: application/json
    post:
      tags:
      - withdrawal
      summary: Create Withdrawal
      description: Create a new withdrawal.
      operationId: postWithdrawals
      requestBody:
        description: The withdrawal to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GXWithdrawal'
        required: true
      responses:
        "201":
          description: "Upon success, returns the newly created withdrawal"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GXWithdrawal'
                x-content-type: application/json
        "400":
          description: (Missing data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
      x-codegen-request-body-name: GXWithdrawal
  /zones/{zone_id}:
    get:
      tags:
      - zones
      summary: Get Zones
      description: Get a single registered zone resource. This method is currently
        limited to only fetching a single zone and might be updated in a future version
        of the API.
      operationId: getZones
      parameters:
      - name: zone_id
        in: path
        description: The zone ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Upon success, returns the zone resource"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GXZone'
        "400":
          description: (ID invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
        "501":
          description: (ID missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/defaultErrorResponse'
components:
  schemas:
    GXAddressFormat:
      title: GXAddressFormat
      required:
      - format
      - summary
      type: object
      properties:
        id:
          type: string
          readOnly: true
        format:
          type: string
        summary:
          type: string
      example:
      - id: "1"
        format: "$firstname $lastname$cr$streets$cr$city, $postcode$cr$statecomma$country"
        summary: $city / $country
    GXAddress:
      title: GXAddress
      required:
      - additionalAddressInfo
      - b2bStatus
      - city
      - class
      - company
      - countryId
      - customerId
      - firstname
      - gender
      - houseNumber
      - lastname
      - postcode
      - street
      - suburb
      - zoneId
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        customerId:
          type: integer
          format: int64
        gender:
          type: string
          enum:
          - m
          - f
        company:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        street:
          type: string
        houseNumber:
          type: string
        additionalAddressInfo:
          type: string
        suburb:
          type: string
        postcode:
          type: string
        city:
          type: string
        countryId:
          type: integer
          format: int64
        zoneId:
          type: integer
          format: int64
        class:
          type: string
        b2bStatus:
          type: boolean
      example:
        customerId: 1
        gender: m
        company: Test Company
        firstname: John
        lastname: Doe
        street: Test Street
        houseNumber: "123"
        additionalAddressInfo: 1. Etage
        suburb: Test Suburb
        postcode: "23983"
        city: Test City
        countryId: 81
        zoneId: 84
        b2bStatus: false
    addressDeleteResponse:
      title: addressDeleteResponse
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        addressId:
          type: integer
          format: int64
      example:
        code: 200
        status: success
        action: delete
        addressId: 811
    CategoryDeleteSuccessResponse:
      title: CategoryDeleteSuccessResponse
      required:
      - action
      - categoryId
      - code
      - resource
      - status
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        categoryId:
          type: integer
          format: int64
      example:
        code: 0
        resource: resource
        action: action
        categoryId: 6
        status: status
    GXCategory:
      title: GXCategory
      required:
      - addonValues
      - dateAdded
      - description
      - headingTitle
      - icon
      - image
      - imageAltText
      - isActive
      - lastModified
      - metaDescription
      - metaKeywords
      - metaTitle
      - name
      - parentId
      - settings
      - sortOrder
      - urlKeywords
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        dateAdded:
          type: string
        lastModified:
          type: string
        parentId:
          type: integer
          format: int64
        isActive:
          type: boolean
        sortOrder:
          type: integer
          format: int64
        name:
          $ref: '#/components/schemas/GXMultiLangOption'
        headingTitle:
          $ref: '#/components/schemas/GXMultiLangOption'
        description:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaTitle:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaDescription:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaKeywords:
          $ref: '#/components/schemas/GXMultiLangOption'
        urlKeywords:
          $ref: '#/components/schemas/GXMultiLangOption'
        icon:
          type: string
        image:
          type: string
        imageAltText:
          $ref: '#/components/schemas/GXMultiLangOption'
        settings:
          $ref: '#/components/schemas/categorySettings'
        addonValues:
          $ref: '#/components/schemas/GXCategory_addonValues'
      example:
        dateAdded: 2008-08-08 17:16:41
        lastModified: 2008-08-25 17:33:52
        parentId: 0
        isActive: true
        sortOrder: 0
        name:
          en: test category
          de: Testkategorie
        headingTitle:
          en: test category
          de: Testkategorie
        description:
          en: test category description
          de: Testkategorie Beschreibung
        metaTitle:
          en: ""
          de: ""
        metaDescription:
          en: ""
          de: ""
        metaKeywords:
          en: ""
          de: ""
        urlKeywords:
          en: test-category
          de: Testkategorie
        icon: item_ltr.gif
        image: ""
        imageAltText:
          en: ""
          de: ""
        settings:
          categoryListingTemplate: categorie_listing.html
          productListingTemplate: product_listing_v1.html
          sortColumn: p.products_price
          sortDirection: ASC
          onSitemap: true
          sitemapPriority: "0.5"
          sitemapChangeFrequency: daily
          showAttributes: false
          showGraduatedPrice: false
          showQuantity: true
          showQuantityInfo: false
          showSubCategories: true
          showSubCategoryImages: true
          showSubCategoryNames: true
          showSubCategoryProducts: false
          isViewModeTiled: false
          showCategoryFilter: false
          filterSelectionMode: 0
          filterValueDeactivation: 0
          groupPermissions:
          - id: "0"
            isPermitted: false
          - id: "1"
            isPermitted: false
          - id: "2"
            isPermitted: false
          - id: "3"
            isPermitted: false
    GXCategoryArray:
      title: GXCategoryArray
      required:
      - addonValues
      - dateAdded
      - description
      - headingTitle
      - icon
      - image
      - imageAltText
      - isActive
      - lastModified
      - metaDescription
      - metaKeywords
      - metaTitle
      - name
      - parentId
      - settings
      - sortOrder
      - urlKeywords
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        dateAdded:
          type: string
        lastModified:
          type: string
        parentId:
          type: integer
          format: int64
        isActive:
          type: boolean
        sortOrder:
          type: integer
          format: int64
        name:
          $ref: '#/components/schemas/GXMultiLangOption'
        headingTitle:
          $ref: '#/components/schemas/GXMultiLangOption'
        description:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaTitle:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaDescription:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaKeywords:
          $ref: '#/components/schemas/GXMultiLangOption'
        urlKeywords:
          $ref: '#/components/schemas/GXMultiLangOption'
        icon:
          type: string
        image:
          type: string
        imageAltText:
          $ref: '#/components/schemas/GXMultiLangOption'
        settings:
          $ref: '#/components/schemas/categorySettings'
        addonValues:
          $ref: '#/components/schemas/GXCategory_addonValues'
      example:
      - dateAdded: 2008-08-08 17:16:41
        lastModified: 2008-08-25 17:33:52
        parentId: 0
        isActive: true
        sortOrder: 0
        name:
          en: test category
          de: Testkategorie
        headingTitle:
          en: test category
          de: Testkategorie
        description:
          en: test category description
          de: Testkategorie Beschreibung
        metaTitle:
          en: ""
          de: ""
        metaDescription:
          en: ""
          de: ""
        metaKeywords:
          en: ""
          de: ""
        urlKeywords:
          en: test-category
          de: Testkategorie
        icon: item_ltr.gif
        image: ""
        imageAltText:
          en: ""
          de: ""
        settings:
          categoryListingTemplate: categorie_listing.html
          productListingTemplate: product_listing_v1.html
          sortColumn: p.products_price
          sortDirection: ASC
          onSitemap: true
          sitemapPriority: "0.5"
          sitemapChangeFrequency: daily
          showAttributes: false
          showGraduatedPrice: false
          showQuantity: true
          showQuantityInfo: false
          showSubCategories: true
          showSubCategoryImages: true
          showSubCategoryNames: true
          showSubCategoryProducts: false
          isViewModeTiled: false
          showCategoryFilter: false
          filterSelectionMode: 0
          filterValueDeactivation: 0
          groupPermissions:
          - id: "0"
            isPermitted: false
          - id: "1"
            isPermitted: false
          - id: "2"
            isPermitted: false
          - id: "3"
            isPermitted: false
    GXCategoryListing:
      title: GXCategoryListing
      type: array
      items:
        $ref: '#/components/schemas/GXCategoryListingEntity'
      x-schema-name: GXCategoryListing
    categoryArrayDeleteResponse:
      title: categoryArrayDeleteResponse
      required:
      - deleted
      - errors
      type: object
      properties:
        deleted:
          type: array
          items:
            type: integer
            format: int64
        errors:
          type: array
          items:
            $ref: '#/components/schemas/defaultErrorResponse'
    categoryArrayPostResponse:
      title: categoryArrayPostResponse
      required:
      - created
      - errors
      type: object
      properties:
        created:
          type: array
          items:
            $ref: '#/components/schemas/GXCategory'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/defaultErrorResponse'
      example:
        created:
        - dateAdded: 2008-08-08 17:16:41
          lastModified: 2008-08-25 17:33:52
          parentId: 0
          isActive: true
          sortOrder: 0
          name:
            en: test category
            de: Testkategorie
          headingTitle:
            en: test category
            de: Testkategorie
          description:
            en: test category description
            de: Testkategorie Beschreibung
          metaTitle:
            en: ""
            de: ""
          metaDescription:
            en: ""
            de: ""
          metaKeywords:
            en: ""
            de: ""
          urlKeywords:
            en: test-category
            de: Testkategorie
          icon: item_ltr.gif
          image: ""
          imageAltText:
            en: ""
            de: ""
          settings:
            categoryListingTemplate: categorie_listing.html
            productListingTemplate: product_listing_v1.html
            sortColumn: p.products_price
            sortDirection: ASC
            onSitemap: true
            sitemapPriority: "0.5"
            sitemapChangeFrequency: daily
            showAttributes: false
            showGraduatedPrice: false
            showQuantity: true
            showQuantityInfo: false
            showSubCategories: true
            showSubCategoryImages: true
            showSubCategoryNames: true
            showSubCategoryProducts: false
            isViewModeTiled: false
            showCategoryFilter: false
            filterSelectionMode: 0
            filterValueDeactivation: 0
            groupPermissions:
            - id: "0"
              isPermitted: false
            - id: "1"
              isPermitted: false
            - id: "2"
              isPermitted: false
            - id: "3"
              isPermitted: false
        - dateAdded: 2008-08-08 17:16:41
          lastModified: 2008-08-25 17:33:52
          parentId: 0
          isActive: true
          sortOrder: 0
          name:
            en: test category
            de: Testkategorie
          headingTitle:
            en: test category
            de: Testkategorie
          description:
            en: test category description
            de: Testkategorie Beschreibung
          metaTitle:
            en: ""
            de: ""
          metaDescription:
            en: ""
            de: ""
          metaKeywords:
            en: ""
            de: ""
          urlKeywords:
            en: test-category
            de: Testkategorie
          icon: item_ltr.gif
          image: ""
          imageAltText:
            en: ""
            de: ""
          settings:
            categoryListingTemplate: categorie_listing.html
            productListingTemplate: product_listing_v1.html
            sortColumn: p.products_price
            sortDirection: ASC
            onSitemap: true
            sitemapPriority: "0.5"
            sitemapChangeFrequency: daily
            showAttributes: false
            showGraduatedPrice: false
            showQuantity: true
            showQuantityInfo: false
            showSubCategories: true
            showSubCategoryImages: true
            showSubCategoryNames: true
            showSubCategoryProducts: false
            isViewModeTiled: false
            showCategoryFilter: false
            filterSelectionMode: 0
            filterValueDeactivation: 0
            groupPermissions:
            - id: "0"
              isPermitted: false
            - id: "1"
              isPermitted: false
            - id: "2"
              isPermitted: false
            - id: "3"
              isPermitted: false
        errors:
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
    categoryArrayPutResponse:
      title: categoryArrayPutResponse
      required:
      - affected
      - errors
      type: object
      properties:
        affected:
          type: array
          items:
            $ref: '#/components/schemas/GXCategory'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/defaultErrorResponse'
      example:
        affected:
        - dateAdded: 2008-08-08 17:16:41
          lastModified: 2008-08-25 17:33:52
          parentId: 0
          isActive: true
          sortOrder: 0
          name:
            en: test category
            de: Testkategorie
          headingTitle:
            en: test category
            de: Testkategorie
          description:
            en: test category description
            de: Testkategorie Beschreibung
          metaTitle:
            en: ""
            de: ""
          metaDescription:
            en: ""
            de: ""
          metaKeywords:
            en: ""
            de: ""
          urlKeywords:
            en: test-category
            de: Testkategorie
          icon: item_ltr.gif
          image: ""
          imageAltText:
            en: ""
            de: ""
          settings:
            categoryListingTemplate: categorie_listing.html
            productListingTemplate: product_listing_v1.html
            sortColumn: p.products_price
            sortDirection: ASC
            onSitemap: true
            sitemapPriority: "0.5"
            sitemapChangeFrequency: daily
            showAttributes: false
            showGraduatedPrice: false
            showQuantity: true
            showQuantityInfo: false
            showSubCategories: true
            showSubCategoryImages: true
            showSubCategoryNames: true
            showSubCategoryProducts: false
            isViewModeTiled: false
            showCategoryFilter: false
            filterSelectionMode: 0
            filterValueDeactivation: 0
            groupPermissions:
            - id: "0"
              isPermitted: false
            - id: "1"
              isPermitted: false
            - id: "2"
              isPermitted: false
            - id: "3"
              isPermitted: false
        - dateAdded: 2008-08-08 17:16:41
          lastModified: 2008-08-25 17:33:52
          parentId: 0
          isActive: true
          sortOrder: 0
          name:
            en: test category
            de: Testkategorie
          headingTitle:
            en: test category
            de: Testkategorie
          description:
            en: test category description
            de: Testkategorie Beschreibung
          metaTitle:
            en: ""
            de: ""
          metaDescription:
            en: ""
            de: ""
          metaKeywords:
            en: ""
            de: ""
          urlKeywords:
            en: test-category
            de: Testkategorie
          icon: item_ltr.gif
          image: ""
          imageAltText:
            en: ""
            de: ""
          settings:
            categoryListingTemplate: categorie_listing.html
            productListingTemplate: product_listing_v1.html
            sortColumn: p.products_price
            sortDirection: ASC
            onSitemap: true
            sitemapPriority: "0.5"
            sitemapChangeFrequency: daily
            showAttributes: false
            showGraduatedPrice: false
            showQuantity: true
            showQuantityInfo: false
            showSubCategories: true
            showSubCategoryImages: true
            showSubCategoryNames: true
            showSubCategoryProducts: false
            isViewModeTiled: false
            showCategoryFilter: false
            filterSelectionMode: 0
            filterValueDeactivation: 0
            groupPermissions:
            - id: "0"
              isPermitted: false
            - id: "1"
              isPermitted: false
            - id: "2"
              isPermitted: false
            - id: "3"
              isPermitted: false
        errors:
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
    categoryGroupPermissions:
      title: categoryGroupPermissions
      required:
      - id
      - isPermitted
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        isPermitted:
          type: boolean
          example: false
    categorySettings:
      title: categorySettings
      required:
      - categoryListingTemplate
      - filterSelectionMode
      - filterValueDeactivation
      - groupPermissions
      - isViewModeTiled
      - onSitemap
      - productListingTemplate
      - showAttributes
      - showCategoryFilter
      - showGraduatedPrice
      - showQuantity
      - showQuantityInfo
      - showSubCategories
      - showSubCategoryImages
      - showSubCategoryNames
      - showSubCategoryProducts
      - sitemapChangeFrequency
      - sitemapPriority
      - sortColumn
      - sortDirection
      type: object
      properties:
        categoryListingTemplate:
          type: string
        productListingTemplate:
          type: string
        sortColumn:
          type: string
        sortDirection:
          type: string
          enum:
          - ASC
          - DSC
        onSitemap:
          type: boolean
        sitemapPriority:
          type: string
        sitemapChangeFrequency:
          type: string
        showAttributes:
          type: boolean
        showGraduatedPrice:
          type: boolean
        showQuantity:
          type: boolean
        showQuantityInfo:
          type: boolean
        showSubCategories:
          type: boolean
        showSubCategoryImages:
          type: boolean
        showSubCategoryNames:
          type: boolean
        showSubCategoryProducts:
          type: boolean
        showCategoriesImageInDescription:
          type: boolean
        isViewModeTiled:
          type: boolean
        showCategoryFilter:
          type: boolean
        filterSelectionMode:
          type: integer
          format: int64
        filterValueDeactivation:
          type: integer
          format: int64
        groupPermissions:
          type: array
          items:
            $ref: '#/components/schemas/categoryGroupPermissions'
      example:
        categoryListingTemplate: category_listing.html
        productListingTemplate: product_listing_v1.html
        sortColumn: p.products_price
        sortDirection: ASC
        onSitemap: true
        sitemapPriority: "0.5"
        sitemapChangeFrequency: daily
        showAttributes: false
        showGraduatedPrice: false
        showQuantity: true
        showQuantityInfo: false
        showSubCategories: true
        showSubCategoryImages: true
        showSubCategoryNames: true
        showSubCategoryProducts: false
        isViewModeTiled: false
        showCategoryFilter: false
        filterSelectionMode: 0
        filterValueDeactivation: 0
    categorySuccessResponse:
      title: categorySuccessResponse
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        categoryId:
          type: integer
          format: int64
    categoryIconGetResponse:
      title: categoryIconGetResponse
      type: object
    categoryImageGetResponse:
      title: categoryImageGetResponse
      type: object
    attachmentSuccessExample:
      title: attachmentSuccessExample
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        path:
          type: string
      example:
        path: path
        code: 0
        action: action
        status: status
    GXCountry:
      title: GXCountry
      required:
      - addressFormatId
      - iso2
      - iso3
      - name
      - status
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        iso2:
          type: string
        iso3:
          type: string
        addressFormatId:
          type: integer
          format: int64
        status:
          type: boolean
      example:
        name: Deutschland
        iso2: de
        iso3: deu
        addressFormatId: 3
        status: true
    GXCountryZone:
      title: GXCountryZone
      required:
      - iso
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        iso:
          type: string
      example:
        name: Bremen
        iso: BRE
    GXCustomerGroup:
      title: GXCustomerGroup
      required:
      - configurations
      - names
      - settings
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        names:
          $ref: '#/components/schemas/GXMultiLangOption'
        settings:
          $ref: '#/components/schemas/GXCustomerGroupSettings'
        configurations:
          $ref: '#/components/schemas/GXCustomerGroupConfigurations'
      example:
        names:
        - en: Kids
          de: Kinder
        settings:
          public: false
          otDiscountFlag: false
          graduatedPrices: false
          showPrice: true
          showPriceTax: false
          addTaxOt: false
          discountAttributes: false
          fsk18: false
          fsk18Display: false
          writeReviews: false
          readReviews: false
        configurations:
          minOrder: 2.5
          maxOrder: 20
          discount: 0.5
          otDiscount: 0
          unallowedPaymentModules:
          - paypal
          - cod
          - moneyorder
          unallowedShippingModules:
          - selfpickup
    GXCustomerGroupConfigurations:
      title: GXCustomerGroupConfigurations
      required:
      - discount
      - maxOrder
      - minOrder
      - otDiscount
      - unallowedPaymentModules
      - unallowedShippingModules
      type: object
      properties:
        minOrder:
          type: integer
          format: int64
        maxOrder:
          type: integer
          format: int64
        discount:
          type: integer
          format: int64
        otDiscount:
          type: integer
          format: int64
        unallowedPaymentModules:
          type: array
          items:
            type: string
        unallowedShippingModules:
          type: array
          items:
            type: string
      example:
        minOrder: 2.5
        maxOrder: 20
        discount: 0.5
        otDiscount: 0
        unallowedPaymentModules:
        - paypal
        - cod
        - moneyorder
        unallowedShippingModules:
        - selfpickup
    GXCustomerGroupSettings:
      title: GXCustomerGroupSettings
      required:
      - addTaxOt
      - discountAttributes
      - fsk18
      - fsk18Display
      - graduatedPrices
      - otDiscountFlag
      - public
      - readReviews
      - showPrice
      - showPriceTax
      - writeReviews
      type: object
      properties:
        public:
          type: boolean
        otDiscountFlag:
          type: boolean
        graduatedPrices:
          type: boolean
        showPrice:
          type: boolean
        showPriceTax:
          type: boolean
        addTaxOt:
          type: boolean
        discountAttributes:
          type: boolean
        fsk18:
          type: boolean
        fsk18Display:
          type: boolean
        writeReviews:
          type: boolean
        readReviews:
          type: boolean
      example:
        public: false
        otDiscountFlag: false
        graduatedPrices: false
        showPrice: true
        showPriceTax: false
        addTaxOt: false
        discountAttributes: false
        fsk18: false
        fsk18Display: false
        writeReviews: false
        readReviews: false
    GXCustomer:
      title: GXCustomer
      required:
      - addonValues
      - addressId
      - dateOfBirth
      - email
      - fax
      - firstname
      - gender
      - isGuest
      - lastname
      - number
      - statusId
      - telephone
      - vatNumber
      - vatNumberStatus
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        number:
          type: string
        gender:
          type: string
          enum:
          - m
          - f
        firstname:
          type: string
        lastname:
          type: string
        dateOfBirth:
          type: string
        vatNumber:
          type: string
        vatNumberStatus:
          type: integer
          format: int64
        telephone:
          type: string
        fax:
          type: string
        email:
          type: string
        statusId:
          type: integer
          format: int64
        isGuest:
          type: boolean
        addressId:
          type: integer
          format: int64
        addonValues:
          type: string
      example:
        number: "234982739"
        gender: m
        firstname: John
        lastname: Doe
        dateOfBirth: 1985-02-13
        vatNumber: "0923429837942"
        vatNumberStatus: true
        telephone: "2343948798345"
        fax: "2093049283"
        email: customer@email.de
        password: 827ccb0eea8a706c4c34a16891f84e7b
        statusId: 1
        type: registree
        addressId: 1029
        isGuest: false
    GXCustomerArray:
      title: GXCustomerArray
      type: array
      example:
      - number: "234982739"
        gender: m
        firstname: John
        lastname: Doe
        dateOfBirth: 1985-02-13
        vatNumber: "0923429837942"
        vatNumberStatus: true
        telephone: "2343948798345"
        fax: "2093049283"
        email: customer@email.de
        password: 827ccb0eea8a706c4c34a16891f84e7b
        statusId: "1"
        type: registree
        isGuest: false
        address:
          company: Test Company
          b2bStatus: false
          street: Test Street
          houseNumber: "5"
          additionalAddressInfo: 6. Etage
          suburb: Test Suburb
          postcode: "23983"
          city: Test City
          countryId: "81"
          zoneId: "1355"
      items:
        $ref: '#/components/schemas/GXCustomer'
      x-schema-name: GXCustomerArray
    GXCustomerEmail:
      title: GXCustomerEmail
      required:
      - attachments
      - bcc
      - cc
      - contentHtml
      - creationDate
      - isPending
      - recipient
      - sender
      - sentDate
      - subject
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        subject:
          type: string
        sender:
          $ref: '#/components/schemas/GXCustomerEmailAddress'
        recipient:
          $ref: '#/components/schemas/GXCustomerEmailAddress'
        contentHtml:
          type: string
        isPending:
          type: boolean
        creationDate:
          type: string
        sentDate:
          type: string
        bcc:
          type: array
          items:
            type: string
        cc:
          type: array
          items:
            type: string
        attachments:
          type: array
          items:
            type: string
      example:
        subject: Test Subject
        sender:
          emailAddress: sender@email.de
          contactName: John Doe
        recipient:
          emailAddress: recipient@email.de
          contactName: Jane Doe
        replyTo:
          emailAddress: reply_to@email.de
          contactName: John Doe (Reply To)
        contentHtml: <strong>html content</strong>
        contentPlain: plain content
        isPending: false
        creationDate: 2015-06-04 14:36:00
        sendDate: 2015-06-04 14:36:00
        bcc:
        - emailAddress: bcc@email.de
          contactName: Chris Doe
        cc:
        - emailAddress: cc@email.de
          contactName: Chloe Doe
        attachments:
        - path: /var/www/html/shop/uploads/attachments/1434614398/myfile.txt
          name: nice_name_for_my_file.txt
    GXCustomerEmailAddress:
      title: GXCustomerEmailAddress
      required:
      - contactName
      - emailAddress
      type: object
      properties:
        emailAddress:
          type: string
        contactName:
          type: string
      example:
        emailAddress: contact@mail.de
        contactName: John Doe
    GXCustomerMemo:
      title: GXCustomerMemo
      required:
      - date
      - posterId
      - text
      - title
      type: object
      properties:
        title:
          type: string
        text:
          type: string
        date:
          type: string
        posterId:
          type: integer
          format: int64
      example:
        title: Test Memo
        text: These are the memo contents.
        date: 2018-01-01 00:00:00
        posterId: 1
    GXCustomerStatus:
      title: GXCustomerStatus
      required:
      - discount
      - image
      - isGuest
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        image:
          type: string
        discount:
          type: integer
          format: int64
        isGuest:
          type: boolean
      example:
        name: Admin
        image: admin_status.gif
        discount: 0
        isGuest: false
    customerArrayDeleteResponse:
      title: customerArrayDeleteResponse
      required:
      - deleted
      - errors
      type: object
      properties:
        deleted:
          type: array
          items:
            type: integer
            format: int64
        errors:
          type: array
          items:
            $ref: '#/components/schemas/defaultErrorResponse'
      example:
        deleted:
        - 0
        - 0
        errors:
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
    customerArrayPostResponse:
      title: customerArrayPostResponse
      required:
      - created
      - errors
      type: object
      properties:
        created:
          type: array
          items:
            $ref: '#/components/schemas/GXCustomer'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/defaultErrorResponse'
      example:
        created:
        - number: "234982739"
          gender: m
          firstname: John
          lastname: Doe
          dateOfBirth: 1985-02-13
          vatNumber: "0923429837942"
          vatNumberStatus: true
          telephone: "2343948798345"
          fax: "2093049283"
          email: customer@email.de
          password: 827ccb0eea8a706c4c34a16891f84e7b
          statusId: 1
          type: registree
          addressId: 1029
          isGuest: false
        - number: "234982739"
          gender: m
          firstname: John
          lastname: Doe
          dateOfBirth: 1985-02-13
          vatNumber: "0923429837942"
          vatNumberStatus: true
          telephone: "2343948798345"
          fax: "2093049283"
          email: customer@email.de
          password: 827ccb0eea8a706c4c34a16891f84e7b
          statusId: 1
          type: registree
          addressId: 1029
          isGuest: false
        errors:
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
    customerArrayPutResponse:
      title: customerArrayPutResponse
      required:
      - errors
      - updated
      type: object
      properties:
        updated:
          type: array
          items:
            $ref: '#/components/schemas/GXCustomer'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/defaultErrorResponse'
      example:
        updated:
        - number: "234982739"
          gender: m
          firstname: John
          lastname: Doe
          dateOfBirth: 1985-02-13
          vatNumber: "0923429837942"
          vatNumberStatus: true
          telephone: "2343948798345"
          fax: "2093049283"
          email: customer@email.de
          password: 827ccb0eea8a706c4c34a16891f84e7b
          statusId: 1
          type: registree
          addressId: 1029
          isGuest: false
        - number: "234982739"
          gender: m
          firstname: John
          lastname: Doe
          dateOfBirth: 1985-02-13
          vatNumber: "0923429837942"
          vatNumberStatus: true
          telephone: "2343948798345"
          fax: "2093049283"
          email: customer@email.de
          password: 827ccb0eea8a706c4c34a16891f84e7b
          statusId: 1
          type: registree
          addressId: 1029
          isGuest: false
        errors:
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
    GXManufacturer:
      title: GXManufacturer
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        image:
          type: string
        dateAdded:
          $ref: '#/components/schemas/GXManufacturerDate'
        lastModified:
          $ref: '#/components/schemas/GXManufacturerDate'
        urls:
          $ref: '#/components/schemas/GXMultiLangOption'
      example:
        name: Breitling
        image: manufacturers/breitling-logo.png
        dateAdded:
          date: 2017-09-29 10:37:27.000000
          timezone_type: 3
          timezone: Europe/Berlin
        lastModified:
          date: 2017-09-29 10:37:27.000000
          timezone_type: 3
          timezone: Europe/Berlin
        urls:
          en: https://breitling.com
          de: https://breitling.de
    GXManufacturerDate:
      title: GXManufacturerDate
      required:
      - date
      - timezone
      - timezone_type
      type: object
      properties:
        date:
          type: string
        timezone_type:
          type: integer
          format: int64
        timezone:
          type: string
      example:
        date: 2017-09-29 10:37:27.000000
        timezone_type: 3
        timezone: Europe/Berlin
    GXOrderStatus:
      title: GXOrderStatus
      required:
      - color
      - names
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        names:
          $ref: '#/components/schemas/GXMultiLangOption'
        color:
          type: string
      example:
        names:
          en: Pending
          de: Offen
        color: f6ae49
    GXParcelService:
      title: GXParcelService
      required:
      - descriptions
      - isDefault
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        isDefault:
          type: boolean
        descriptions:
          type: array
          items:
            $ref: '#/components/schemas/GXParcelService_descriptions'
      example:
        name: DHL
        isDefault: true
        descriptions:
          url:
            en: "http://nolp.dhl.de/nextt-online-public/set_identcodes.do?lang=en&idc={TRACKING_NUMBER}&rfn=&extendedSearch=true"
            de: "http://nolp.dhl.de/nextt-online-public/set_identcodes.do?lang=de&idc={TRACKING_NUMBER}&rfn=&extendedSearch=true"
          comment:
            en: You can access the shipment tracking for your order by visiting the
              link above.
            de: Die Sendungsverfolgung für Ihre Bestellung können Sie über den oben
              stehenden Link aufrufen.
    GXOrder:
      title: GXOrder
      required:
      - addonValues
      - addresses
      - comment
      - currencyCode
      - customer
      - items
      - languageCode
      - paymentType
      - purchaseDate
      - shippingType
      - statusHistory
      - statusId
      - totalWeight
      - totals
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        statusId:
          type: integer
          format: int64
        purchaseDate:
          type: string
        currencyCode:
          type: string
        languageCode:
          type: string
        comment:
          type: string
        totalWeight:
          type: integer
          format: int64
        paymentType:
          $ref: '#/components/schemas/GXTitleAndModuleType'
        shippingType:
          $ref: '#/components/schemas/GXTitleAndModuleType'
        customer:
          $ref: '#/components/schemas/GXOrderCustomer'
        addresses:
          $ref: '#/components/schemas/GXOrderAddressMain'
        items:
          type: array
          items:
            $ref: '#/components/schemas/GXOrderItem'
        totals:
          type: array
          items:
            $ref: '#/components/schemas/GXOrderTotal'
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/GXOrderStatusHistory'
        addonValues:
          $ref: '#/components/schemas/GXOrderAddonValues'
      example:
        statusId: 1
        purchaseDate: 2015-11-06 12:22:39
        currencyCode: EUR
        languageCode: DE
        totalWeight: 0.123
        comment: ""
        paymentType:
          title: cod
          module: cod
        shippingType:
          title: Pauschale Versandkosten (Standard)
          module: flat_flat
        customer:
          id: 1
          number: ""
          email: admin@shop.de
          phone: 0421 - 22 34 678
          vatId: ""
          status:
            id: 0
            name: Admin
            image: admin_status.gif
            discount: 0
            isGuest: false
        addresses:
          customer:
            gender: m
            firstname: John
            lastname: Doe
            company: JD Company
            street: Test Street
            houseNumber: "123"
            additionalAddressInfo: 1. Etage
            suburb: ""
            postcode: "28219"
            city: Bremen
            countryId: 81
            zoneId: 0
            b2bStatus: false
          billing:
            gender: m
            firstname: John
            lastname: Doe
            company: JD Company
            street: Test Street
            houseNumber: "123"
            additionalAddressInfo: 1. Etage
            suburb: ""
            postcode: "28219"
            city: Bremen
            countryId: 81
            zoneId: 0
            b2bStatus: false
          delivery:
            gender: m
            firstname: John
            lastname: Doe
            company: JD Company
            street: Test Street
            houseNumber: "123"
            additionalAddressInfo: 1. Etage
            suburb: ""
            postcode: "28219"
            city: Bremen
            countryId: 81
            zoneId: 0
            b2bStatus: false
        items:
        - id: 1
          model: 12345-s-black
          name: Ein Artikel
          quantity: 1
          price: 11
          finalPrice: 11
          tax: 19
          isTaxAllowed: "true"
          discount: 0
          shippingTimeInformation: ""
          checkoutInformation: Checkout information goes here ...
          quantityUnitName: Liter
          attributes:
          - id: 1
            name: Farbe
            value: rot
            price: 0
            priceType: +
            optionId: 1
            optionValueId: 1
            combisId: "null"
          downloadInformation:
          - filename: Dokument.pdf
            maxDaysAllowed: 5
            countAvailable: 14
          addonValues:
            productId: 2
            quantityUnitId: 1
        totals:
        - id: 1
          title: Zwischensumme
          value: 50
          valueText: "50,00 EUR"
          class: ot_subtotal
          sortOrder: 10
        statusHistory:
        - id: 1
          statusId: 1
          dateAdded: 2015-11-06 12:22:39
          comment: ""
          customerNotified: "true"
        addonValues:
          customerIp: ""
          downloadAbandonmentStatus: "0"
          serviceAbandonmentStatus: "0"
          ccType: ""
          ccOwner: ""
          ccNumber: ""
          ccExpires: ""
          ccStart: ""
          ccIssue: ""
          ccCvv: ""
    GXOrderAddonValues:
      title: GXOrderAddonValues
      required:
      - ccCvv
      - ccExpires
      - ccIssue
      - ccNumber
      - ccOwner
      - ccStart
      - ccType
      - customerIp
      - downloadAbandonmentStatus
      - serviceAbandonmentStatus
      type: object
      properties:
        ccCvv:
          type: string
        ccExpires:
          type: string
        ccIssue:
          type: string
        ccNumber:
          type: string
        ccOwner:
          type: string
        ccStart:
          type: string
        ccType:
          type: string
        customerIp:
          type: string
        downloadAbandonmentStatus:
          type: string
        serviceAbandonmentStatus:
          type: string
      example:
        ccCvv: ""
        ccExpires: ""
        ccIssue: ""
        ccNumber: ""
        ccOwner: ""
        ccStart: ""
        ccType: ""
        customerIp: ""
        downloadAbandonmentStatus: "0"
        serviceAbandonmentStatus: "0"
    GXOrderAddress:
      title: GXOrderAddress
      required:
      - additionalAddressInfo
      - b2bStatus
      - city
      - company
      - countryId
      - firstname
      - gender
      - houseNumber
      - lastname
      - postcode
      - street
      - suburb
      - zoneId
      type: object
      properties:
        gender:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        company:
          type: string
        street:
          type: string
        houseNumber:
          type: string
        additionalAddressInfo:
          type: string
        suburb:
          type: string
        postcode:
          type: string
        city:
          type: string
        countryId:
          type: integer
          format: int64
        zoneId:
          type: integer
          format: int64
        b2bStatus:
          type: boolean
      example:
        customerId: 1
        gender: m
        company: Test Company
        firstname: John
        lastname: Doe
        street: Test Street
        houseNumber: "123"
        additionalAddressInfo: 1. Etage
        suburb: Test Suburb
        postcode: "23983"
        city: Test City
        countryId: 81
        zoneId: 84
        b2bStatus: false
    GXOrderAddressMain:
      title: GXOrderAddressMain
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/GXOrderAddress'
        billing:
          $ref: '#/components/schemas/GXOrderAddress'
        delivery:
          $ref: '#/components/schemas/GXOrderAddress'
      example:
        customer:
          gender: m
          firstname: John
          lastname: Doe
          company: JD Company
          street: Test Street
          houseNumber: "123"
          additionalAddressInfo: 1. Etage
          suburb: ""
          postcode: "28219"
          city: Bremen
          countryId: 81
          zoneId: 0
          b2bStatus: false
        billing:
          gender: m
          firstname: John
          lastname: Doe
          company: JD Company
          street: Test Street
          houseNumber: "123"
          additionalAddressInfo: 1. Etage
          suburb: ""
          postcode: "28219"
          city: Bremen
          countryId: 81
          zoneId: 0
          b2bStatus: false
        delivery:
          gender: m
          firstname: John
          lastname: Doe
          company: JD Company
          street: Test Street
          houseNumber: "123"
          additionalAddressInfo: 1. Etage
          suburb: ""
          postcode: "28219"
          city: Bremen
          countryId: 81
          zoneId: 0
          b2bStatus: false
    GXOrderCustomer:
      title: GXCustomer
      required:
      - email
      - number
      - phone
      - status
      - vatId
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        number:
          type: string
        email:
          type: string
        phone:
          type: string
        vatId:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/GXCustomerStatus'
      example:
        customer:
          number: ""
          email: admin@shop.de
          phone: 0421 - 22 34 678
          vatId: 0
          status:
            id: 0
            name: Admin
            image: admin_status.gif
            discount: 0
            isGuest: false
    GXOrderItem:
      title: GXOrderItem
      required:
      - addonValues
      - attributes
      - checkoutInformation
      - discount
      - downloadInformation
      - finalPrice
      - gxCustomizerData
      - isTaxAllowed
      - model
      - name
      - price
      - quantity
      - quantityUnitName
      - shippingTimeInformation
      - tax
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        model:
          type: string
        name:
          type: string
        quantity:
          type: integer
          format: int64
        price:
          type: integer
          format: int64
        finalPrice:
          type: integer
          format: int64
        tax:
          type: integer
          format: int64
        isTaxAllowed:
          type: boolean
        discount:
          type: integer
          format: int64
        shippingTimeInformation:
          type: string
        checkoutInformation:
          type: string
        attributes:
          $ref: '#/components/schemas/GXOrderItemAttributes'
        downloadInformation:
          type: array
          items:
            type: string
        addonValues:
          $ref: '#/components/schemas/GXOrderItemAddons'
        quantityUnitName:
          type: string
        gxCustomizerData:
          type: array
          items:
            type: string
      example:
        model: 12345-s-black
        name: Ein Artikel
        quantity: 1
        price: 11
        finalPrice: 11
        tax: 19
        isTaxAllowed: true
        discount: 0
        shippingTimeInformation: ""
        checkoutInformation: Checkout information goes here ...
        quantityUnitName: Liter
        attributes:
        - id: 1
          name: Farbe
          value: rot
          price: 0
          priceType: +
          optionId: 1
          optionValueId: 1
        downloadInformation:
          filename: Dokument.pdf
          maxDaysAllowed: 5
          countAvailable: 14
        addonValues:
          productId: "2"
          quantityUnitId: "1"
    GXOrderItemAddons:
      title: GXOrderItemsAddons
      required:
      - productId
      - productType
      type: object
      properties:
        productId:
          type: string
        productType:
          type: string
    GXOrderItemAttributes:
      title: GXOrderItemAttributes
      required:
      - combisId
      - name
      - optionId
      - optionValueId
      - price
      - priceType
      - value
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        value:
          type: string
        price:
          type: integer
          format: int64
        priceType:
          type: string
        combisId:
          type: integer
          format: int64
        optionId:
          type: integer
          format: int64
        optionValueId:
          type: integer
          format: int64
      example:
        name: Farbe
        value: rot
        price: 0
        priceType: ""
        combisId: 1
    GXOrderListItem:
      title: GXOrderListItem
      required:
      - comment
      - customerEmail
      - customerId
      - customerMemos
      - customerName
      - customerStatusId
      - customerStatusName
      - deliveryAddress
      - mailStatus
      - paymentType
      - purchaseDate
      - shippingType
      - statusId
      - statusName
      - totalSum
      - trackingLinks
      - withdrawalIds
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        statusId:
          type: integer
          format: int64
        statusName:
          type: string
          format: int64
        totalSum:
          type: string
          format: int64
        purchaseDate:
          type: string
          format: int64
        comment:
          type: string
          format: int64
        withdrawalIds:
          type: array
          items:
            type: integer
            format: int64
        mailStatus:
          type: boolean
        customerId:
          type: integer
          format: int64
        customerName:
          type: string
        customerEmail:
          type: string
        customerStatusId:
          type: integer
          format: int64
        customerStatusName:
          type: string
        customerMemos:
          type: array
          items:
            $ref: '#/components/schemas/GXCustomerMemo'
        deliveryAddress:
          $ref: '#/components/schemas/GXOrderAddress'
        billingAddress:
          $ref: '#/components/schemas/GXOrderAddress'
        paymentType:
          $ref: '#/components/schemas/GXTitleAndModuleType'
        shippingType:
          $ref: '#/components/schemas/GXTitleAndModuleType'
        trackingLinks:
          type: array
          items:
            type: string
      example:
        statusId: 1
        statusName: Offen
        totalSum: "28,70 EUR"
        purchaseDate: 2018-01-01 00:00:00
        comment: ""
        withdrawalIds: []
        mailStatus: true
        customerId: 1
        customerName: Max Mustermann
        customerEmail: test@example.org
        customerStatusId: 0
        customerStatusName: Admin
        customerMemos: []
        deliveryAddress:
          firstName: Max
          lastName: Mustermann
          company: ""
          street: Testweg 123
          houseNumber: ""
          additionalAddressInfo: ""
          postcode: "12345"
          city: Bremen
          state: ""
          country: Germany
          countryIsoCode: DE
        billingAddress:
          firstName: Max
          lastName: Mustermann
          company: ""
          street: Testweg 123
          houseNumber: ""
          additionalAddressInfo: ""
          postcode: "12345"
          city: Bremen
          state: ""
          country: Germany
          countryIsoCode: DE
        paymentType:
          title: Rechnung
          module: MoneyOrder
        shippingType:
          title: "Deutsche Post (Versand nach DE:  (1 x 2 kg))"
          module: dp_dp
        trackingLinks: []
    GXOrderStatusHistory:
      title: GXOrderStatusHistory
      required:
      - comment
      - customerNotified
      - dateAdded
      - statusId
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        statusId:
          type: integer
          format: int64
        dateAdded:
          type: string
        comment:
          type: string
        customerNotified:
          type: boolean
      example:
        statusId: 1
        dateAdded: 2015-11-06 12:22:39
        comment: ""
        customerNotified: true
        customerId: 1
    GXOrderTotal:
      title: GXOrderTotal
      required:
      - class
      - sortOrder
      - title
      - value
      - valueText
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        title:
          type: string
        value:
          type: integer
          format: int64
        valueText:
          type: string
        class:
          type: string
        sortOrder:
          type: integer
          format: int64
      example:
        title: Zwischensumme
        value: 50
        valueText: "50,00 EUR"
        class: ot_subtotal
        sortOrder: 10
    GXPaymentDetails:
      title: GXPaymentDetails
      required:
      - details
      - module
      type: object
      properties:
        module:
          type: string
        details:
          type: object
          properties: {}
      example:
        module: sepa
        details:
          creditor_id: "12345"
          mandate_reference: "8465414"
          sepa_owner: Daniel Wu
          sepa_iban: DF1524363456
          sepa_bic: fghfg3456
          sepa_bankname: fghfgjhfgjhfj
    GXProductImage:
      title: GXProductImage
      required:
      - filename
      - imageAltText
      - isPrimary
      - isVisible
      type: object
      properties:
        filename:
          type: string
        isPrimary:
          type: boolean
        isVisible:
          type: boolean
        imageAltText:
          $ref: '#/components/schemas/GXMultiLangOption'
      example:
        filename: artikelbild_1_1.jpg
        isPrimary: false
        isVisible: true
        imageAltText:
          en: article picture
          de: Artikelbild
    productImageGetResponse:
      title: productImageGetResponse
      type: string
      example: "[an_image.png]"
    GXProductGraduatedPrices:
      title: GXProductGraduatedPrices
      required:
      - graduatedPrice
      - threshold
      type: object
      properties:
        graduatedPrice:
          type: number
          format: double
        threshold:
          type: number
          format: double
      example:
        graduatedPrice: 75.6303
        threshold: 2.5
    GXProductGroupPrices:
      title: GXProductGroupPrices
      type: object
      properties:
        customerGroupId:
          type: integer
          format: int64
          readOnly: true
        groupPrice:
          type: number
          format: double
        graduatedPrices:
          type: array
          items:
            $ref: '#/components/schemas/GXProductGraduatedPrices'
      example:
        customerGroupId: 3
        groupPrice: 75.6303
        graduatedPrices:
        - graduatedPrice: 73.9496
          threshold: 2.5
        - graduatedPrice: 72.2689
          threshold: 5
        - graduatedPrice: 70.5882
          threshold: 7.5
    GXProductPrices:
      title: GXProductPrices
      required:
      - groupPrices
      - price
      - productId
      - taxClassId
      type: object
      properties:
        productId:
          type: integer
          format: int64
          readOnly: true
        price:
          type: number
          format: double
        taxClassId:
          type: integer
          format: int64
          readOnly: true
        groupPrices:
          type: array
          items:
            $ref: '#/components/schemas/GXProductGroupPrices'
      example:
        price: 123.123
        groupPrices:
        - customerGroupId: 1
          groupPrice: 122.122
          graduatedPrices:
          - graduatedPrice: 115
            threshold: 5
          - graduatedPrice: 100
            threshold: 10
        - customerGroupId: 2
          groupPrice: 100
        - customerGroupId: 3
          graduatedPrices:
          - graduatedPrice: 98
            threshold: 2.5
          - graduatedPrice: 95
            threshold: 5
          - graduatedPrice: 90
            threshold: 7.5
    GXProductQuantityPrice:
      title: GXProductQuantityPrice
      required:
      - graduatedPrice
      - taxClassId
      type: object
      properties:
        graduatedPrice:
          type: number
          format: double
        taxClassId:
          type: number
          format: int64
      example:
        graduatedPrice: 75.6303
        taxClassId: 1
    GXQuantityUnit:
      title: GXQuantityUnit
      required:
      - names
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        names:
          $ref: '#/components/schemas/GXMultiLangOption'
      example:
        names:
          en: piece
          de: Stück
    GXProduct:
      title: GXProduct
      required:
      - addonValues
      - checkoutInformation
      - dateAdded
      - dateAvailable
      - description
      - discountAllowed
      - ean
      - infoUrl
      - isActive
      - isFsk18
      - isVpeActive
      - keywords
      - lastModified
      - manufacturerId
      - metaDescription
      - metaKeywords
      - metaTitle
      - name
      - orderedCount
      - price
      - productModel
      - productTypeId
      - quantity
      - quantityUnitId
      - settings
      - shippingCosts
      - shippingTimeId
      - shortDescription
      - sortOrder
      - taxClassId
      - url
      - urlKeywords
      - viewedCount
      - vpeId
      - vpeValue
      - weight
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        isActive:
          type: boolean
        sortOrder:
          type: integer
          format: int64
        dateAdded:
          type: string
        dateAvailable:
          type: string
        lastModified:
          type: string
        orderedCount:
          type: integer
          format: int64
        productModel:
          type: string
        ean:
          type: string
        price:
          type: number
          description: The product's net price
          format: float
        discountAllowed:
          type: integer
          format: int64
        taxClassId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        weight:
          type: number
          format: float
        shippingCosts:
          type: number
          format: float
        shippingTimeId:
          type: integer
          format: int64
        productTypeId:
          type: integer
          format: int64
        manufacturerId:
          type: integer
          format: int64
        isFsk18:
          type: boolean
        isVpeActive:
          type: boolean
        vpeId:
          type: integer
          format: int64
        vpeValue:
          type: integer
          format: int64
        name:
          $ref: '#/components/schemas/GXMultiLangOption'
        description:
          $ref: '#/components/schemas/GXMultiLangOption'
        shortDescription:
          $ref: '#/components/schemas/GXMultiLangOption'
        keywords:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaTitle:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaDescription:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaKeywords:
          $ref: '#/components/schemas/GXMultiLangOption'
        url:
          $ref: '#/components/schemas/GXMultiLangOption'
        infoUrl:
          $ref: '#/components/schemas/GXMultiLangOption'
        urlKeywords:
          $ref: '#/components/schemas/GXMultiLangOption'
        checkoutInformation:
          $ref: '#/components/schemas/GXMultiLangOption'
        viewedCount:
          $ref: '#/components/schemas/GXMultiLangIntOption'
        images:
          type: array
          items:
            $ref: '#/components/schemas/GXProductImage'
        addonValues:
          $ref: '#/components/schemas/GXProductAddonValues'
        settings:
          $ref: '#/components/schemas/GXProductSettings'
        quantityUnitId:
          type: integer
          format: int64
        specialOfferId:
          type: integer
          format: int64
      example:
        isActive: false
        sortOrder: 0
        dateAdded: 2015-08-08 17.19:46
        dateAvailable: 2016-01-21 12:15:42
        lastModified: 2016-03-16 16:01:51
        orderedCount: 1
        productModel: ABC123
        ean: ""
        price: 16.7983
        discountAllowed: 0
        taxClassId: 1
        quantity: 998
        weight: 0
        shippingCosts: 0
        shippingTimeId: 1
        productTypeId: 1
        manufacturerId: 0
        isFsk18: false
        isVpeActive: false
        vpeID: 0
        vpeValue: 0
        name:
          en: Test Product
          de: Testartikel
        description:
          en: <p>Test product description.</p>
          de: |-
            [TAB:Seite 1] Testartikel Beschreibung Seite 1 [TAB:Seite 2] Testartikel Beschreibung
            Seite 2 [TAB:Seite 3] Testartikel Beschreibung Seite 3
        shortDescription:
          en: <p>Test product short description.</p>
          de: <p>Testartikel Kurzbeschreibung</p>
        keywords:
          en: ""
          de: ""
        metaTitle:
          en: ""
          de: ""
        metaDescription:
          en: ""
          de: ""
        metaKeywords:
          en: ""
          de: ""
        url:
          en: ""
          de: ""
        urlKeywords:
          en: test-product
          de: testartikel
        checkoutInformation:
          en: ""
          de: ""
        viewedCount:
          en: 0
          de: 32
        images:
        - filename: artikelbild_1_1.jpg
          isPrimary: false
          isVisible: true
          imageAltText:
            en: ""
            de: ""
        - filename: artikelbild_1_2.jpg
          isPrimary: false
          isVisible: true
          imageAltText:
            en: ""
            de: ""
        - filename: artikelbild_1_3.jpg
          isPrimary: false
          isVisible: true
          imageAltText:
            en: ""
            de: ""
        settings:
          detailsTemplate: standard.html
          optionsDetailsTemplate: product_options_dropdown.html
          optionsListingTemplate: product_options_dropdown.html
          showOnStartpage: false
          showQuantityInfo: true
          showWeight: false
          showPriceOffer: true
          showAddedDateTime: false
          priceStatus: 0
          minOrder: 1
          graduatedQuantity: 1
          onSitemap: true
          sitemapPriority: "0.5"
          sitemapChangeFrequency: daily
          propertiesDropdownMode: dropdown_mode_1
          startpageSortOrder: 0
          showPropertiesPrice: true
          usePropertiesCombisQuantity: false
          usePropertiesCombisShippingTime: true
          usePropertiesCombisWeight: false
        addonValues:
          productsImageWidth: "0"
          productsImageHeight: "0"
        quantityUnitId: 0
    GXProductAddonValues:
      title: GXProductAddonValues
      required:
      - productsImageHeight
      - productsImageWidth
      type: object
      properties:
        productsImageWidth:
          type: string
        productsImageHeight:
          type: string
        codeIsbn:
          type: string
        codeUpc:
          type: string
        codeMpn:
          type: string
        codeJan:
          type: string
        googleExportCondition:
          type: string
        googleExportAvailabilityId:
          type: string
        brandName:
          type: string
        identifierExists:
          type: string
        gender:
          type: string
        ageGroup:
          type: string
        expirationDate:
          type: string
      example:
        productsImageWidth: 150
        productsImageHeight: 150
    GXProductArray:
      title: GXProductArray
      required:
      - addonValues
      - checkoutInformation
      - dateAdded
      - dateAvailable
      - description
      - discountAllowed
      - ean
      - id
      - infoUrl
      - isActive
      - isFsk18
      - isVpeActive
      - keywords
      - lastModified
      - manufacturerId
      - metaDescription
      - metaKeywords
      - metaTitle
      - name
      - orderedCount
      - price
      - productModel
      - productTypeId
      - quantity
      - quantityUnitId
      - settings
      - shippingCosts
      - shippingTimeId
      - shortDescription
      - sortOrder
      - taxClassId
      - url
      - urlKeywords
      - viewedCount
      - vpeId
      - vpeValue
      - weight
      type: object
      properties:
        id:
          type: integer
          format: int64
        isActive:
          type: boolean
        sortOrder:
          type: integer
          format: int64
        dateAdded:
          type: string
        dateAvailable:
          type: string
        lastModified:
          type: string
        orderedCount:
          type: integer
          format: int64
        productModel:
          type: string
        ean:
          type: string
        price:
          type: number
          format: float
        discountAllowed:
          type: integer
          format: int64
        taxClassId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        weight:
          type: integer
          format: int64
        shippingCosts:
          type: integer
          format: int64
        shippingTimeId:
          type: integer
          format: int64
        productTypeId:
          type: integer
          format: int64
        manufacturerId:
          type: integer
          format: int64
        isFsk18:
          type: boolean
        isVpeActive:
          type: boolean
        vpeId:
          type: integer
          format: int64
        vpeValue:
          type: integer
          format: int64
        name:
          $ref: '#/components/schemas/GXMultiLangOption'
        description:
          $ref: '#/components/schemas/GXMultiLangOption'
        shortDescription:
          $ref: '#/components/schemas/GXMultiLangOption'
        keywords:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaTitle:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaDescription:
          $ref: '#/components/schemas/GXMultiLangOption'
        metaKeywords:
          $ref: '#/components/schemas/GXMultiLangOption'
        url:
          $ref: '#/components/schemas/GXMultiLangOption'
        infoUrl:
          $ref: '#/components/schemas/GXMultiLangOption'
        urlKeywords:
          $ref: '#/components/schemas/GXMultiLangOption'
        checkoutInformation:
          $ref: '#/components/schemas/GXMultiLangOption'
        viewedCount:
          $ref: '#/components/schemas/GXMultiLangIntOption'
        images:
          type: array
          items:
            $ref: '#/components/schemas/GXProductImage'
        addonValues:
          $ref: '#/components/schemas/GXOrderAddonValues'
        settings:
          $ref: '#/components/schemas/GXProductSettings'
        quantityUnitId:
          type: integer
          format: int64
      example:
      - isActive: false
        sortOrder: 0
        dateAdded: 2015-08-08 17.19:46
        dateAvailable: 2016-01-21 12:15:42
        lastModified: 2016-03-16 16:01:51
        orderedCount: 1
        productModel: ABC123
        ean: ""
        price: 16.7983
        discountAllowed: 0
        taxClassId: 1
        quantity: 998
        weight: 0
        shippingCosts: 0
        shippingTimeId: 1
        productTypeId: 1
        manufacturerId: 0
        isFsk18: false
        isVpeActive: false
        vpeID: 0
        vpeValue: 0
        name:
          en: Test Product
          de: Testartikel
        description:
          en: <p>Test product description.</p>
          de: |-
            [TAB:Seite 1] Testartikel Beschreibung Seite 1 [TAB:Seite 2] Testartikel Beschreibung
            Seite 2 [TAB:Seite 3] Testartikel Beschreibung Seite 3
        shortDescription:
          en: <p>Test product short description.</p>
          de: <p>Testartikel Kurzbeschreibung</p>
        keywords:
          en: ""
          de: ""
        metaTitle:
          en: ""
          de: ""
        metaDescription:
          en: ""
          de: ""
        metaKeywords:
          en: ""
          de: ""
        url:
          en: ""
          de: ""
        urlKeywords:
          en: test-product
          de: testartikel
        checkoutInformation:
          en: ""
          de: ""
        viewedCount:
          en: 0
          de: 32
        images:
        - filename: artikelbild_1_1.jpg
          isPrimary: false
          isVisible: true
          imageAltText:
            en: ""
            de: ""
        - filename: artikelbild_1_2.jpg
          isPrimary: false
          isVisible: true
          imageAltText:
            en: ""
            de: ""
        - filename: artikelbild_1_3.jpg
          isPrimary: false
          isVisible: true
          imageAltText:
            en: ""
            de: ""
        settings:
          detailsTemplate: standard.html
          optionsDetailsTemplate: product_options_dropdown.html
          optionsListingTemplate: product_options_dropdown.html
          showOnStartpage: false
          showQuantityInfo: true
          showWeight: false
          showPriceOffer: true
          showAddedDateTime: false
          priceStatus: 0
          minOrder: 1
          graduatedQuantity: 1
          onSitemap: true
          sitemapPriority: "0.5"
          sitemapChangeFrequency: daily
          propertiesDropdownMode: dropdown_mode_1
          startpageSortOrder: 0
          showPropertiesPrice: true
          usePropertiesCombisQuantity: false
          usePropertiesCombisShippingTime: true
          usePropertiesCombisWeight: false
        addonValues:
          productsImageWidth: "0"
          productsImageHeight: "0"
        quantityUnitId: 0
    GXProductLinkPutRequest:
      title: GXProductLinkPutRequest
      required:
      - newCategoryId
      - oldCategoryId
      type: object
      properties:
        oldCategoryId:
          type: integer
          format: int64
        newCategoryId:
          type: integer
          format: int64
      example:
        oldCategoryId: 1
        newCategoryId: 2
    GXProductListing:
      title: GXProductListing
      required:
      - dateAdded
      - dateAvailable
      - discountAllowed
      - ean
      - id
      - image
      - imageAltText
      - isActive
      - isFsk18
      - isVpeActive
      - lastModified
      - manufacturerId
      - name
      - orderedCount
      - price
      - productModel
      - productTypeId
      - quantity
      - quantityUnitId
      - shippingCosts
      - shippingTimeId
      - sortOrder
      - specialOfferId
      - taxClassId
      - urlKeywords
      - vpeId
      - vpeValue
      - weight
      type: object
      properties:
        id:
          type: integer
          format: int64
        isActive:
          type: boolean
        sortOrder:
          type: integer
          format: int64
        dateAdded:
          type: string
        dateAvailable:
          type: string
        lastModified:
          type: string
        orderedCount:
          type: integer
          format: int64
        productModel:
          type: string
        ean:
          type: string
        price:
          type: number
          format: float
        discountAllowed:
          type: integer
          format: int64
        taxClassId:
          type: integer
          format: int64
        quantity:
          type: number
          format: float
        name:
          type: string
        image:
          type: string
        imageAltText:
          type: string
        urlKeywords:
          type: string
        weight:
          type: number
          format: float
        shippingCosts:
          type: number
          format: float
        shippingTimeId:
          type: integer
          format: int64
        productTypeId:
          type: integer
          format: int64
        manufacturerId:
          type: integer
          format: int64
        quantityUnitId:
          type: integer
          format: int64
        isFsk18:
          type: boolean
        isVpeActive:
          type: boolean
        vpeId:
          type: integer
          format: int64
        vpeValue:
          type: number
          format: float
        specialOfferId:
          type: integer
          format: int64
      example:
        id: 6
        isActive: true
        sortOrder: 0
        dateAdded: 2019-08-27 10:18:07
        dateAvailable: 1000-01-01 00:00:00
        lastModified: 2019-08-27 10:18:07
        orderedCount: 0
        productModel: pulli-123
        ean: ""
        price: 25.2101
        discountAllowed: 0
        taxClassId: 1
        quantity: 0
        name: Pulli
        image: ""
        imageAltText: ""
        urlKeywords: ""
        weight: 0
        shippingCosts: 0
        shippingTimeId: 1
        productTypeId: 1
        manufacturerId: 0
        quantityUnitId: 0
        isFsk18: false
        isVpeActive: false
        vpeId: 0
        vpeValue: 0
        specialOfferId: 0
    GXProductSettings:
      title: GXProductSettings
      required:
      - detailsTemplate
      - graduatedQuantity
      - groupPermissions
      - minOrder
      - onSitemap
      - optionsDetailsTemplate
      - optionsListingTemplate
      - priceStatus
      - propertiesCombisQuantityCheckMode
      - propertiesDropdownMode
      - showAddedDateTime
      - showOnStartpage
      - showPriceOffer
      - showPropertiesPrice
      - showQuantityInfo
      - showWeight
      - sitemapChangeFrequency
      - sitemapPriority
      - startpageSortOrder
      - usePropertiesCombisShippingTime
      - usePropertiesCombisWeight
      type: object
      properties:
        detailsTemplate:
          type: string
        optionsDetailsTemplate:
          type: string
        optionsListingTemplate:
          type: string
        showOnStartpage:
          type: boolean
        showQuantityInfo:
          type: boolean
        showWeight:
          type: boolean
        showPriceOffer:
          type: boolean
        showAddedDateTime:
          type: boolean
        priceStatus:
          type: integer
          description: "Provide: \"0\" for normal, \"1\" for price on request and\
            \ \"2\" for not available for purchase."
          format: int64
        minOrder:
          type: integer
          format: int64
        graduatedQuantity:
          type: integer
          format: int64
        onSitemap:
          type: boolean
        sitemapPriority:
          type: string
        sitemapChangeFrequency:
          type: string
        propertiesDropdownMode:
          type: string
        startpageSortOrder:
          type: integer
          format: int64
        showPropertiesPrice:
          type: boolean
        propertiesCombisQuantityCheckMode:
          type: integer
          format: int64
        usePropertiesCombisShippingTime:
          type: boolean
        usePropertiesCombisWeight:
          type: boolean
        groupPermissions:
          type: array
          items:
            $ref: '#/components/schemas/GXProductSettingsGroupPermission'
      example:
        settings:
          detailsTemplate: standard.html
          optionsDetailsTemplate: product_options_dropdown.html
          optionsListingTemplate: product_options_dropdown.html
          showOnStartpage: false
          showQuantityInfo: true
          showWeight: false
          showPriceOffer: true
          showAddedDateTime: false
          priceStatus: 0
          minOrder: 1
          graduatedQuantity: 1
          onSitemap: true
          sitemapPriority: "0.5"
          sitemapChangeFrequency: daily
          propertiesDropdownMode: dropdown_mode_1
          startpageSortOrder: 0
          showPropertiesPrice: true
          usePropertiesCombisQuantity: false
          usePropertiesCombisShippingTime: true
          usePropertiesCombisWeight: false
    GXProductSettingsGroupPermission:
      title: GXProductSettingsGroupPermission
      required:
      - isPermitted
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        isPermitted:
          type: boolean
      example:
        isPermitted: false
    ProductsDeleteSuccessResponse:
      title: ProductsDeleteSuccessResponse
      required:
      - action
      - code
      - productId
      - resource
      - status
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        productId:
          type: integer
          format: int64
      example:
        code: 0
        productId: 6
        resource: resource
        action: action
        status: status
    productArrayDeleteResponse:
      title: productArrayDeleteResponse
      required:
      - deleted
      - errors
      type: object
      properties:
        deleted:
          type: array
          items:
            type: integer
            format: int64
        errors:
          type: array
          items:
            $ref: '#/components/schemas/defaultErrorResponse'
    productArrayPostResponse:
      title: productArrayPostResponse
      required:
      - created
      - errors
      type: object
      properties:
        created:
          type: array
          items:
            $ref: '#/components/schemas/GXProduct'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/defaultErrorResponse'
      example:
        created:
        - isActive: false
          sortOrder: 0
          dateAdded: 2015-08-08 17.19:46
          dateAvailable: 2016-01-21 12:15:42
          lastModified: 2016-03-16 16:01:51
          orderedCount: 1
          productModel: ABC123
          ean: ""
          price: 16.7983
          discountAllowed: 0
          taxClassId: 1
          quantity: 998
          weight: 0
          shippingCosts: 0
          shippingTimeId: 1
          productTypeId: 1
          manufacturerId: 0
          isFsk18: false
          isVpeActive: false
          vpeID: 0
          vpeValue: 0
          name:
            en: Test Product
            de: Testartikel
          description:
            en: <p>Test product description.</p>
            de: |-
              [TAB:Seite 1] Testartikel Beschreibung Seite 1 [TAB:Seite 2] Testartikel Beschreibung
              Seite 2 [TAB:Seite 3] Testartikel Beschreibung Seite 3
          shortDescription:
            en: <p>Test product short description.</p>
            de: <p>Testartikel Kurzbeschreibung</p>
          keywords:
            en: ""
            de: ""
          metaTitle:
            en: ""
            de: ""
          metaDescription:
            en: ""
            de: ""
          metaKeywords:
            en: ""
            de: ""
          url:
            en: ""
            de: ""
          urlKeywords:
            en: test-product
            de: testartikel
          checkoutInformation:
            en: ""
            de: ""
          viewedCount:
            en: 0
            de: 32
          images:
          - filename: artikelbild_1_1.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          - filename: artikelbild_1_2.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          - filename: artikelbild_1_3.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          settings:
            detailsTemplate: standard.html
            optionsDetailsTemplate: product_options_dropdown.html
            optionsListingTemplate: product_options_dropdown.html
            showOnStartpage: false
            showQuantityInfo: true
            showWeight: false
            showPriceOffer: true
            showAddedDateTime: false
            priceStatus: 0
            minOrder: 1
            graduatedQuantity: 1
            onSitemap: true
            sitemapPriority: "0.5"
            sitemapChangeFrequency: daily
            propertiesDropdownMode: dropdown_mode_1
            startpageSortOrder: 0
            showPropertiesPrice: true
            usePropertiesCombisQuantity: false
            usePropertiesCombisShippingTime: true
            usePropertiesCombisWeight: false
          addonValues:
            productsImageWidth: "0"
            productsImageHeight: "0"
          quantityUnitId: 0
        - isActive: false
          sortOrder: 0
          dateAdded: 2015-08-08 17.19:46
          dateAvailable: 2016-01-21 12:15:42
          lastModified: 2016-03-16 16:01:51
          orderedCount: 1
          productModel: ABC123
          ean: ""
          price: 16.7983
          discountAllowed: 0
          taxClassId: 1
          quantity: 998
          weight: 0
          shippingCosts: 0
          shippingTimeId: 1
          productTypeId: 1
          manufacturerId: 0
          isFsk18: false
          isVpeActive: false
          vpeID: 0
          vpeValue: 0
          name:
            en: Test Product
            de: Testartikel
          description:
            en: <p>Test product description.</p>
            de: |-
              [TAB:Seite 1] Testartikel Beschreibung Seite 1 [TAB:Seite 2] Testartikel Beschreibung
              Seite 2 [TAB:Seite 3] Testartikel Beschreibung Seite 3
          shortDescription:
            en: <p>Test product short description.</p>
            de: <p>Testartikel Kurzbeschreibung</p>
          keywords:
            en: ""
            de: ""
          metaTitle:
            en: ""
            de: ""
          metaDescription:
            en: ""
            de: ""
          metaKeywords:
            en: ""
            de: ""
          url:
            en: ""
            de: ""
          urlKeywords:
            en: test-product
            de: testartikel
          checkoutInformation:
            en: ""
            de: ""
          viewedCount:
            en: 0
            de: 32
          images:
          - filename: artikelbild_1_1.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          - filename: artikelbild_1_2.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          - filename: artikelbild_1_3.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          settings:
            detailsTemplate: standard.html
            optionsDetailsTemplate: product_options_dropdown.html
            optionsListingTemplate: product_options_dropdown.html
            showOnStartpage: false
            showQuantityInfo: true
            showWeight: false
            showPriceOffer: true
            showAddedDateTime: false
            priceStatus: 0
            minOrder: 1
            graduatedQuantity: 1
            onSitemap: true
            sitemapPriority: "0.5"
            sitemapChangeFrequency: daily
            propertiesDropdownMode: dropdown_mode_1
            startpageSortOrder: 0
            showPropertiesPrice: true
            usePropertiesCombisQuantity: false
            usePropertiesCombisShippingTime: true
            usePropertiesCombisWeight: false
          addonValues:
            productsImageWidth: "0"
            productsImageHeight: "0"
          quantityUnitId: 0
        errors:
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
    productArrayPutResponse:
      title: productArrayPutResponse
      required:
      - errors
      - updated
      type: object
      properties:
        updated:
          type: array
          items:
            $ref: '#/components/schemas/GXProduct'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/defaultErrorResponse'
      example:
        updated:
        - isActive: false
          sortOrder: 0
          dateAdded: 2015-08-08 17.19:46
          dateAvailable: 2016-01-21 12:15:42
          lastModified: 2016-03-16 16:01:51
          orderedCount: 1
          productModel: ABC123
          ean: ""
          price: 16.7983
          discountAllowed: 0
          taxClassId: 1
          quantity: 998
          weight: 0
          shippingCosts: 0
          shippingTimeId: 1
          productTypeId: 1
          manufacturerId: 0
          isFsk18: false
          isVpeActive: false
          vpeID: 0
          vpeValue: 0
          name:
            en: Test Product
            de: Testartikel
          description:
            en: <p>Test product description.</p>
            de: |-
              [TAB:Seite 1] Testartikel Beschreibung Seite 1 [TAB:Seite 2] Testartikel Beschreibung
              Seite 2 [TAB:Seite 3] Testartikel Beschreibung Seite 3
          shortDescription:
            en: <p>Test product short description.</p>
            de: <p>Testartikel Kurzbeschreibung</p>
          keywords:
            en: ""
            de: ""
          metaTitle:
            en: ""
            de: ""
          metaDescription:
            en: ""
            de: ""
          metaKeywords:
            en: ""
            de: ""
          url:
            en: ""
            de: ""
          urlKeywords:
            en: test-product
            de: testartikel
          checkoutInformation:
            en: ""
            de: ""
          viewedCount:
            en: 0
            de: 32
          images:
          - filename: artikelbild_1_1.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          - filename: artikelbild_1_2.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          - filename: artikelbild_1_3.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          settings:
            detailsTemplate: standard.html
            optionsDetailsTemplate: product_options_dropdown.html
            optionsListingTemplate: product_options_dropdown.html
            showOnStartpage: false
            showQuantityInfo: true
            showWeight: false
            showPriceOffer: true
            showAddedDateTime: false
            priceStatus: 0
            minOrder: 1
            graduatedQuantity: 1
            onSitemap: true
            sitemapPriority: "0.5"
            sitemapChangeFrequency: daily
            propertiesDropdownMode: dropdown_mode_1
            startpageSortOrder: 0
            showPropertiesPrice: true
            usePropertiesCombisQuantity: false
            usePropertiesCombisShippingTime: true
            usePropertiesCombisWeight: false
          addonValues:
            productsImageWidth: "0"
            productsImageHeight: "0"
          quantityUnitId: 0
        - isActive: false
          sortOrder: 0
          dateAdded: 2015-08-08 17.19:46
          dateAvailable: 2016-01-21 12:15:42
          lastModified: 2016-03-16 16:01:51
          orderedCount: 1
          productModel: ABC123
          ean: ""
          price: 16.7983
          discountAllowed: 0
          taxClassId: 1
          quantity: 998
          weight: 0
          shippingCosts: 0
          shippingTimeId: 1
          productTypeId: 1
          manufacturerId: 0
          isFsk18: false
          isVpeActive: false
          vpeID: 0
          vpeValue: 0
          name:
            en: Test Product
            de: Testartikel
          description:
            en: <p>Test product description.</p>
            de: |-
              [TAB:Seite 1] Testartikel Beschreibung Seite 1 [TAB:Seite 2] Testartikel Beschreibung
              Seite 2 [TAB:Seite 3] Testartikel Beschreibung Seite 3
          shortDescription:
            en: <p>Test product short description.</p>
            de: <p>Testartikel Kurzbeschreibung</p>
          keywords:
            en: ""
            de: ""
          metaTitle:
            en: ""
            de: ""
          metaDescription:
            en: ""
            de: ""
          metaKeywords:
            en: ""
            de: ""
          url:
            en: ""
            de: ""
          urlKeywords:
            en: test-product
            de: testartikel
          checkoutInformation:
            en: ""
            de: ""
          viewedCount:
            en: 0
            de: 32
          images:
          - filename: artikelbild_1_1.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          - filename: artikelbild_1_2.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          - filename: artikelbild_1_3.jpg
            isPrimary: false
            isVisible: true
            imageAltText:
              en: ""
              de: ""
          settings:
            detailsTemplate: standard.html
            optionsDetailsTemplate: product_options_dropdown.html
            optionsListingTemplate: product_options_dropdown.html
            showOnStartpage: false
            showQuantityInfo: true
            showWeight: false
            showPriceOffer: true
            showAddedDateTime: false
            priceStatus: 0
            minOrder: 1
            graduatedQuantity: 1
            onSitemap: true
            sitemapPriority: "0.5"
            sitemapChangeFrequency: daily
            propertiesDropdownMode: dropdown_mode_1
            startpageSortOrder: 0
            showPropertiesPrice: true
            usePropertiesCombisQuantity: false
            usePropertiesCombisShippingTime: true
            usePropertiesCombisWeight: false
          addonValues:
            productsImageWidth: "0"
            productsImageHeight: "0"
          quantityUnitId: 0
        errors:
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
        - request:
            path: path
            method: method
            uri:
              resource: resource
              root: root
            url: url
          code: 0
          message: message
          error:
            stack:
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            - args:
              - args
              - args
              file: file
              line: 1
              function: function
              type: type
              class: class
            file: file
            line: 6
          status: status
    productCategoryLinkID:
      title: productCategoryLinkID
      type: object
      properties:
        categoryId:
          type: integer
          format: int64
      example:
        categoryId: 57
    productLinksGetResponse:
      title: productLinksGetResponse
      type: integer
      format: int64
      example: 4
    GXReview:
      title: GXReview
      required:
      - customer
      - dateAdded
      - languageId
      - lastModified
      - rating
      - readCount
      - text
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        productid:
          type: integer
          format: int64
        rating:
          type: integer
          format: int64
        readCount:
          type: integer
          format: int64
        dateAdded:
          type: string
        lastModified:
          type: string
        languageId:
          type: integer
          format: int64
        text:
          type: string
        customer:
          $ref: '#/components/schemas/GXReviewCustomer'
      example:
        productId: 4
        rating: 5
        readCount: 8
        dateAdded: 2016-01-03 12:07:30
        lastModified: 2016-05-18 15:20:03
        languageId: 2
        text: This is an example review text!
        customer:
          customerId: 1
          customerName: Ester Tester
    GXReviewCustomer:
      title: GXReviewCustomer
      required:
      - customerName
      type: object
      properties:
        customerId:
          type: integer
          format: int64
          readOnly: true
        customerName:
          type: string
      example:
        customerName: Ester Tester
    reviewSuccessResponse:
      title: reviewSuccessResponse
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        reviewId:
          type: integer
          format: int64
      example:
        code: 0
        resource: resource
        action: action
        reviewId: 6
        status: status
    GXShopInfo:
      title: GXShopInfo
      required:
      - city
      - company
      - country
      - countryId
      - email
      - fax
      - firstname
      - houseNumber
      - lastname
      - owner
      - postcode
      - shopName
      - shopVersion
      - state
      - street
      - telephone
      - template
      - url
      - zoneId
      type: object
      properties:
        url:
          type: string
        shopName:
          type: string
        owner:
          type: string
        company:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        street:
          type: string
        houseNumber:
          type: string
        postcode:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        telephone:
          type: string
        fax:
          type: string
        email:
          type: string
        zoneId:
          type: string
        countryId:
          type: string
        template:
          type: string
        shopVersion:
          type: string
      example:
        url: https://shop.de/
        shopName: Mein Gambio Shop
        owner: John Doe
        company: Test Company
        firstname: John
        lastname: Doe
        street: Test Street
        houseNumber: 1
        postcode: "12345"
        city: Bremen
        state: Bremen
        country: Deutschland
        telephone: "0123456789"
        fax: "0123456789"
        email: john@doe.com
        zoneId: "1255"
        countryId: "81"
        template: Honeygrid
        shopVersion: "3.8"
    GXSpecialOffer:
      title: GXSpecialOffer
      required:
      - expiresAt
      - price
      - quantity
      - status
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        productId:
          type: integer
          format: int64
        price:
          type: number
          format: double
        quantity:
          type: number
          format: double
        status:
          type: boolean
        expiresAt:
          type: string
        added:
          type: string
        modified:
          type: string
      example:
        productId: 2
        price: 1.2345
        quantity: 5.4321
        status: true
        expiresAt: 2015-01-01 09:00:00
        added: 2015-01-01 09:00:00
        modified: 2015-01-01 09:00:00
    GXTaxClass:
      title: GXTaxClass
      required:
      - description
      - title
      type: object
      properties:
        id:
          type: string
          readOnly: true
        title:
          type: string
        description:
          type: string
        taxRates:
          type: array
          items:
            $ref: '#/components/schemas/GXTaxClassRate'
      example:
        title: Standardsatz
        description: ""
        taxRates:
        - id: "1"
          taxZoneId: "5"
          taxClassId: "1"
          taxRate: "19.0000"
          description: 19% MwSt.
        - id: "3"
          taxZoneId: "6"
          taxClassId: "1"
          taxRate: "0.0000"
          description: EU-AUS-UST 0%
    GXTaxClassRate:
      title: GXTaxClassRate
      required:
      - description
      - taxClassId
      - taxRate
      - taxZoneId
      type: object
      properties:
        id:
          type: string
          readOnly: true
        taxZoneId:
          type: string
        taxClassId:
          type: string
        taxRate:
          type: string
        description:
          type: string
      example:
        taxZoneId: "5"
        taxClassId: "1"
        taxRate: "19.0000"
        description: 19% MwSt.
    GXTaxZone:
      title: GXTaxZone
      required:
      - description
      - name
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
      example:
        name: Steuerzone EU
        description: Steuerzone für die EU
    GXTrackingCode:
      title: GXTrackingCode
      required:
      - creationDate
      - id
      - languageId
      - orderId
      - parcelServiceId
      - trackingCode
      type: object
      properties:
        id:
          type: string
          readOnly: true
        orderId:
          type: string
          description: A tracking code is bound to an order on creation.
          readOnly: true
        trackingCode:
          type: string
        parcelServiceId:
          type: string
        parcelServiceName:
          type: string
          readOnly: true
        languageId:
          type: string
        url:
          type: string
          readOnly: true
        comment:
          type: string
          readOnly: true
        creationDate:
          type: string
          readOnly: true
      example:
        orderId: "403510"
        trackingCode: "71179106254223"
        parcelServiceId: "4"
        parcelServiceName: Test-Service
        languageId: "2"
        url: https://tracking.example.com/?TrackID=0123456789
        comment: A comment.
        creationDate: 2016-07-30 09:59:43
    GXTrackingCodeRequestBody:
      title: GXTrackingCodeRequestBody
      required:
      - languageId
      - parcelServiceId
      - trackingCode
      type: object
      properties:
        trackingCode:
          type: string
        parcelServiceId:
          type: string
        languageId:
          type: string
      example:
        trackingCode: "71179106254223"
        parcelServiceId: "4"
        languageId: "2"
    trackingCodeSuccessResponse:
      title: trackingCodeSuccessResponse
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        trackingCodeId:
          type: integer
          format: int64
      example:
        trackingCodeId: 6
        code: 0
        resource: resource
        action: action
        status: status
    GXVPE:
      title: GXVPE
      required:
      - default
      - names
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        default:
          type: boolean
        names:
          $ref: '#/components/schemas/GXMultiLangOption'
      example:
        default: false
        names:
          en: API Packing unit
          de: API Verpackungseinheit
    GXWithdrawal:
      title: GXWithdrawal
      required:
      - content
      - createdByAdmin
      - dateCreated
      - order
      - withdrawalDate
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        withdrawalDate:
          type: string
        content:
          type: string
        order:
          $ref: '#/components/schemas/GXWithdrawalOrder'
        dateCreated:
          type: string
        createdByAdmin:
          type: boolean
      example:
        id: 1
        withdrawalDate: 2018-05-28 12:45:07
        content: This is an example for a withdrawal's content.
        order:
          orderId: 400276
          customerId: 0
          customerGender: Frau
          customerFirstName: Maxi
          customerLastName: Musterfrau
          customerStreetAddress: Musterstraße 3
          customerPostCode: "28219"
          customerCity: Bremen
          customerCountry: Germany
          customerEmail: m.musterfrau@example.com
          orderDate: 2018-05-14 12:45:07
          deliveryDate: 1000-01-01 00:00:00
        dateCreated: 2018-05-28 12:45:07
        createdByAdmin: true
    GXWithdrawalOrder:
      title: GXWithdrawalOrder
      required:
      - customerCity
      - customerCountry
      - customerEmail
      - customerFirstname
      - customerGender
      - customerId
      - customerLastName
      - customerPostCode
      - customerStreetAddress
      - deliveryDate
      - orderDate
      type: object
      properties:
        orderId:
          type: integer
          format: int64
          readOnly: true
        customerId:
          type: integer
          format: int64
        customerGender:
          type: string
        customerFirstname:
          type: string
        customerLastName:
          type: string
        customerStreetAddress:
          type: string
        customerPostCode:
          type: string
        customerCity:
          type: string
        customerCountry:
          type: string
        customerEmail:
          type: string
        orderDate:
          type: string
        deliveryDate:
          type: string
      example:
        orderId: 400276
        customerId: 0
        customerGender: Frau
        customerFirstName: Maxi
        customerLastName: Musterfrau
        customerStreetAddress: Musterstraße 3
        customerPostCode: "28219"
        customerCity: Bremen
        customerCountry: Germany
        customerEmail: m.musterfrau@example.com
        orderDate: 2018-05-14 12:45:07
        deliveryDate: 1000-01-01 00:00:00
    withdrawalSuccessResponse:
      title: withdrawalSuccessResponse
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        withdrawalId:
          type: integer
          format: int64
      example:
        withdrawalId: 6
        code: 0
        resource: resource
        action: action
        status: status
    GXZone:
      title: GXZone
      required:
      - iso
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        iso:
          type: string
      example:
        id: 84
        name: Bremen
        iso: BRE
    GXFilenameChange:
      title: GXFilenameChange
      type: object
      properties:
        oldFilename:
          type: string
        newFilename:
          type: string
      example:
        oldFilename: my-old-file.png
        newFilename: my-new-file.png
    GXMultiLangIntOption:
      title: GXMultiLangIntOption
      required:
      - de
      - en
      type: object
      properties:
        en:
          type: integer
          format: int64
        de:
          type: integer
          format: int64
      example:
        en: 100
        de: 150
    GXMultiLangOption:
      title: GXMultiLangOption
      required:
      - de
      - en
      type: object
      properties:
        en:
          type: string
        de:
          type: string
      example:
        en: English Content
        de: Deutscher Inhalt
    GXTitleAndModuleType:
      title: GXPaymentType
      required:
      - module
      - title
      type: object
      properties:
        title:
          type: string
        module:
          type: string
      example:
        title: Payment Title
        module: Payment Module
    SearchCondition:
      title: SearchCondition
      required:
      - search
      type: object
      properties:
        search:
          type: array
          description: Contains the search condition. Further information can be found
            on the <a href='/gambio-gx3-api/guides/search-example'>Search Example</a>
            page.
          items:
            type: string
      example:
        search:
        - match:
            database_table.database_attribute: some value
        - match:
            another_database_table.another_database_attribute: some other value
    defaultErrorResponse:
      title: defaultErrorResponse
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        message:
          type: string
        request:
          $ref: '#/components/schemas/defaultErrorResponse_request'
        error:
          $ref: '#/components/schemas/defaultErrorsObject'
      example:
        request:
          path: path
          method: method
          uri:
            resource: resource
            root: root
          url: url
        code: 0
        message: message
        error:
          stack:
          - args:
            - args
            - args
            file: file
            line: 1
            function: function
            type: type
            class: class
          - args:
            - args
            - args
            file: file
            line: 1
            function: function
            type: type
            class: class
          file: file
          line: 6
        status: status
    defaultErrorStackObject:
      title: defaultErrorStackObject
      type: object
      properties:
        file:
          type: string
        line:
          type: integer
          format: int64
        function:
          type: string
        class:
          type: string
        type:
          type: string
        args:
          type: array
          items:
            type: string
      example:
        args:
        - args
        - args
        file: file
        line: 1
        function: function
        type: type
        class: class
    defaultErrorsObject:
      title: defaultErrorsObject
      type: object
      properties:
        file:
          type: string
        line:
          type: integer
          format: int64
        stack:
          type: array
          items:
            $ref: '#/components/schemas/defaultErrorStackObject'
      example:
        stack:
        - args:
          - args
          - args
          file: file
          line: 1
          function: function
          type: type
          class: class
        - args:
          - args
          - args
          file: file
          line: 1
          function: function
          type: type
          class: class
        file: file
        line: 6
    defaultUpdateResponseWithFilenames:
      title: defaultUpdateResponseWithFilenames
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        oldFilename:
          type: string
        newFilename:
          type: string
      example:
        oldFilename: oldFilename
        code: 0
        action: action
        newFilename: newFilename
        status: status
    defaultSuccessResponseWithCustomerGroupID:
      title: defaultSuccessResponseWithCustomerGroupID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        customerGroupId:
          type: integer
          format: int64
      example:
        customerGroupId: 6
        code: 0
        action: action
        status: status
    defaultSuccessResponseWithCustomerID:
      title: defaultSuccessResponseWithCustomerID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        customerId:
          type: integer
          format: int64
    defaultSuccessResponseWithEmailID:
      title: defaultSuccessResponseWithEmailID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        emailId:
          type: integer
          format: int64
      example:
        code: 0
        action: action
        emailId: 6
        status: status
    defaultSuccessResponseWithFilename:
      title: defaultSuccessResponseWithFilename
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        filename:
          type: string
      example:
        code: 0
        filename: filename
        action: action
        status: status
    defaultSuccessResponseWithManufacturersID:
      title: defaultSuccessResponseWithManufacturersID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        manufacturersId:
          type: integer
          format: int64
      example:
        code: 0
        manufacturersId: 6
        action: action
        status: status
    defaultSuccessResponseWithOrderID:
      title: defaultSuccessResponseWithOrderID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        orderId:
          type: integer
          format: int64
      example:
        code: 0
        resource: resource
        orderId: 6
        action: action
        status: status
    defaultSuccessResponseWithOrderIDAndOrderItemID:
      title: defaultSuccessResponseWithOrderIDAndOrderItemID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        orderId:
          type: integer
          format: int64
        orderItemId:
          type: integer
          format: int64
      example:
        code: 0
        resource: resource
        orderId: 6
        orderItemId: 1
        action: action
        status: status
    defaultSuccessResponseWithOrderIDAndOrderItemIDAndOrderItemAttributeID:
      title: defaultSuccessResponseWithOrderIDAndOrderItemIDAndOrderItemAttributeID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        orderId:
          type: integer
          format: int64
        orderItemId:
          type: integer
          format: int64
        orderItemAttributeId:
          type: integer
          format: int64
      example:
        orderItemAttributeId: 5
        code: 0
        resource: resource
        orderId: 6
        orderItemId: 1
        action: action
        status: status
    defaultSuccessResponseWithOrderIDAndOrderTotalID:
      title: defaultSuccessResponseWithOrderIDAndOrderTotalID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        orderId:
          type: integer
          format: int64
        orderTotalId:
          type: integer
          format: int64
      example:
        code: 0
        resource: resource
        orderId: 6
        action: action
        orderTotalId: 1
        status: status
    defaultSuccessResponseWithOrderStatusID:
      title: defaultSuccessResponseWithOrderStatusID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        orderStatusId:
          type: integer
          format: int64
      example:
        code: 0
        orderStatusId: 6
        action: action
        status: status
    defaultSuccessResponseWithParcelServiceID:
      title: defaultSuccessResponseWithParcelServiceID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        parcelServiceId:
          type: integer
          format: int64
      example:
        code: 0
        action: action
        parcelServiceId: 6
        status: status
    defaultSuccessResponseWithProductID:
      title: defaultSuccessResponseWithProductID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        productId:
          type: integer
          format: int64
      example:
        code: 0
        productId: 6
        resource: resource
        action: action
        status: status
    defaultSuccessResponseWithProductIDAndCategoryID:
      title: defaultSuccessResponseWithProductIDAndCategoryID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        productId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
      example:
        code: 0
        productId: 6
        resource: resource
        action: action
        categoryId: 1
        status: status
    defaultSuccessResponseWithProductIDAndCategoryIDs:
      title: defaultSuccessResponseWithProductIDAndCategoryIDs
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        resource:
          type: string
        productId:
          type: integer
          format: int64
        oldCategoryId:
          type: integer
          format: int64
        newCategoryId:
          type: integer
          format: int64
      example:
        oldCategoryId: 1
        newCategoryId: 5
        code: 0
        productId: 6
        resource: resource
        action: action
        status: status
    defaultSuccessResponseWithQuantityUnitID:
      title: defaultSuccessResponseWithQuantityUnitID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        quantityUnitId:
          type: integer
          format: int64
      example:
        quantityUnitId: 6
        code: 0
        action: action
        status: status
    defaultSuccessResponseWithSpecialOfferID:
      title: defaultSuccessResponseWithSpecialOfferID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        specialOfferId:
          type: integer
          format: int64
      example:
        specialOfferId: 6
        code: 0
        action: action
        status: status
    defaultSuccessResponseWithVpeID:
      title: defaultSuccessResponseWithVpeID
      type: object
      properties:
        code:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        vpeId:
          type: integer
          format: int64
      example:
        code: 0
        vpeId: 6
        action: action
        status: status
    attachments_body:
      required:
      - filename
      - upload_attachment
      properties:
        upload_attachment:
          type: string
          description: The attachment to upload
          format: binary
        filename:
          type: string
          description: The final filename
    category_icons_body:
      properties:
        uploaded_file:
          type: string
          description: The icon to upload
          format: binary
        filenae:
          type: string
          description: The final filename
    category_images_body:
      required:
      - filename
      - upload_category_image
      properties:
        upload_category_image:
          type: string
          description: The category image to upload
          format: binary
        filename:
          type: string
          description: The final filename
    product_images_body:
      required:
      - filename
      - upload_product_image
      properties:
        upload_product_image:
          type: string
          description: The product image to upload
          format: binary
        filename:
          type: string
          description: The final filename
    GXCategory_addonValues:
      type: object
      properties:
        key:
          type: string
      example: null
    GXCategoryListingEntity:
      title: GXCategoryListingEntity
      required:
      - description
      - headingTitle
      - icon
      - id
      - image
      - imageAltText
      - isActive
      - name
      - parentId
      - urlKeywords
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        parentId:
          type: integer
          format: int64
          readOnly: true
        isActive:
          type: boolean
        name:
          type: string
        headingTitle:
          type: string
        description:
          type: string
        urlKeywords:
          type: string
        icon:
          type: string
        image:
          type: string
        imageAltText:
          type: string
        _links:
          type: array
          items:
            type: string
      example:
        image: image
        imageAltText: imageAltText
        headingTitle: headingTitle
        _links:
        - _links
        - _links
        name: name
        urlKeywords: urlKeywords
        icon: icon
        description: description
        id: 0
        isActive: true
        parentId: 6
    GXParcelService_descriptions:
      required:
      - comment
      - url
      type: object
      properties:
        url:
          $ref: '#/components/schemas/GXMultiLangOption'
        comment:
          $ref: '#/components/schemas/GXMultiLangOption'
      example: null
    defaultErrorResponse_request_uri:
      type: object
      properties:
        root:
          type: string
        resource:
          type: string
      example:
        resource: resource
        root: root
    defaultErrorResponse_request:
      type: object
      properties:
        method:
          type: string
        url:
          type: string
        path:
          type: string
        uri:
          $ref: '#/components/schemas/defaultErrorResponse_request_uri'
      example:
        path: path
        method: method
        uri:
          resource: resource
          root: root
        url: url
  parameters:
    deleted:
      name: deleted
      in: query
      description: "*Optional parameter*. If provided, receive a change history of\
        \ items that were **deleted** at the given date."
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
    changed:
      name: changed
      in: query
      description: "*Optional parameter*. If provided, receive a change history of\
        \ items that were **changed/deleted** at the given date."
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
    modified:
      name: modified
      in: query
      description: "*Optional parameter*. If provided, receive a change history of\
        \ items that were **modified** at a given date."
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
    recursive:
      name: recursive
      in: query
      description: "*Optional parameter*. If provided, recursively includes the ressources\
        \ child-resources."
      required: false
      allowEmptyValue: true
      style: form
      explode: true
      schema:
        type: boolean
    fields:
      name: fields
      in: query
      description: '*Optional parameter*. If provided limits the properties to be
        included in the response.'
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    page:
      name: page
      in: query
      description: "*Optional parameter*. If provided, displays the specified page.\
        \ Defaults to 0."
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int64
        default: 0
    per_page:
      name: per_page
      in: query
      description: "*Optional parameter*. If provided, limits the amount of records\
        \ in the response. Defaults to 50."
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int64
        default: 50
    search:
      name: search
      in: query
      description: '*Optional parameter*. Search for a url-encoded keyword.'
      required: false
      style: form
      explode: true
      schema:
        type: string
    sort:
      name: sort
      in: query
      description: "*Optional parameter*. Sorts by the desired properties. Maximum\
        \ sorting fields are 5. (prefix property with + for ascending, - for descending)"
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
x-navigateMethodsByName: true
x-original-swagger-version: "2.0"
